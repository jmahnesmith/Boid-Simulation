{"version":3,"sources":["node_modules/three/build/three.module.js","node_modules/three/examples/jsm/controls/OrbitControls.js","../src/dat/color/toString.js","../src/dat/utils/common.js","../src/dat/color/interpret.js","../src/dat/color/math.js","../src/dat/color/Color.js","../src/dat/controllers/Controller.js","../src/dat/dom/dom.js","../src/dat/controllers/BooleanController.js","../src/dat/controllers/OptionController.js","../src/dat/controllers/StringController.js","../src/dat/controllers/NumberController.js","../src/dat/controllers/NumberControllerBox.js","../src/dat/controllers/NumberControllerSlider.js","../src/dat/controllers/FunctionController.js","../src/dat/controllers/ColorController.js","../src/dat/utils/css.js","../src/dat/gui/saveDialogue.html.js","../src/dat/controllers/ControllerFactory.js","../src/dat/utils/requestAnimationFrame.js","../src/dat/dom/CenteredDiv.js","../src/dat/gui/GUI.js","../src/dat/index.js","index.js","C:/Users/jwm21/AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","key","_createClass","protoProps","staticProps","_toPrimitive","String","toPrimitive","Number","REVISION","exports","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","TwoPassDoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","AgXToneMapping","AttachedBindMode","DetachedBindMode","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","DisplayP3ColorSpace","LinearDisplayP3ColorSpace","LinearTransfer","SRGBTransfer","Rec709Primaries","P3Primaries","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","listener","_listeners","undefined","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","array","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","lerp","damp","lambda","dt","exp","pingpong","arguments","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","b","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","_Symbol$iterator","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","LINEAR_SRGB_TO_LINEAR_DISPLAY_P3","LINEAR_DISPLAY_P3_TO_LINEAR_SRGB","COLOR_SPACES","_defineProperty","transfer","primaries","toReference","color","fromReference","convertSRGBToLinear","convertLinearToSRGB","SUPPORTED_WORKING_COLOR_SPACES","Set","ColorManagement","enabled","_workingColorSpace","workingColorSpace","colorSpace","has","concat","convert","sourceColorSpace","targetColorSpace","sourceToReference","targetFromReference","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","getTransfer","SRGBToLinear","LinearToSRGB","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","_sourceId","Source","isSource","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","_textureId","Texture","_EventDispatcher","_inherits","_super","_createSuper","_this2","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","isTexture","_assertThisInitialized","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","generator","dispose","transformUv","uv","encoding","Vector4","_Symbol$iterator2","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","_context3","RenderTarget","_EventDispatcher2","_super2","_this3","options","isRenderTarget","depth","scissor","scissorTest","viewport","assign","depthBuffer","stencilBuffer","depthTexture","samples","texture","setSize","WebGLRenderTarget","_RenderTarget","_super3","_this4","isWebGLRenderTarget","DataArrayTexture","_Texture","_super4","_this5","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","_WebGLRenderTarget","_super5","_this6","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_super6","_this7","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_super7","_this8","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","_WebGLRenderTarget3","_super8","_this9","count","isWebGLMultipleRenderTargets","il","Quaternion","_Symbol$iterator3","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","u1","sqrt1u1","sqrtu1","u2","u3","_onChange","callback","_context4","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","_Symbol$iterator4","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","vx","vy","vz","qx","qy","qz","qw","tz","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","_context5","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$b","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","positionAttribute","getAttribute","isInstancedMesh","isMesh","getVertexPosition","boundingBox","computeBoundingBox","_box$4","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$3","_v1$6","_v2$3","Sphere","isSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","position","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","zInv","_matrix$1","_quaternion$3","Euler","_Symbol$iterator5","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","_EventDispatcher3","_super9","_this10","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeShadow","onAfterShadow","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","error","remove","removeFromParent","clear","apply","_toConsumableArray","attach","getObjectById","id","getObjectByProperty","getObjectByName","child","getObjectsByProperty","result","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","instanceMatrix","instanceColor","isBatchedMesh","perObjectFrustumCulled","sortObjects","drawRanges","_drawRanges","reservedRanges","_reservedRanges","visibility","_visibility","active","_active","bounds","_bounds","map","bound","boxInitialized","boxMin","boxMax","sphereInitialized","sphereRadius","sphereCenter","maxGeometryCount","_maxGeometryCount","maxVertexCount","_maxVertexCount","maxIndexCount","_maxIndexCount","geometryInitialized","_geometryInitialized","geometryCount","_geometryCount","matricesTexture","_matricesTexture","boundingSphere","serialize","library","element","isScene","background","isColor","environment","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","warnedGetUV","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getUV","uv1","uv2","uv3","getInterpolation","v3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","_colorKeywords","_hslA","_hslB","hue2rgb","Color","_Symbol$iterator6","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","getHex","_color","getHexString","toString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","_materialId","Material","_EventDispatcher4","_super10","_this11","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","MeshBasicMaterial","_Material","_super11","_this12","isMeshBasicMaterial","_get","_getPrototypeOf","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","_updateRange","updateRanges","gpuType","onUploadCallback","setUsage","addUpdateRange","start","clearUpdateRanges","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","_BufferAttribute","_super12","Uint8BufferAttribute","_BufferAttribute2","_super13","Uint8ClampedBufferAttribute","_BufferAttribute3","_super14","Int16BufferAttribute","_BufferAttribute4","_super15","Uint16BufferAttribute","_BufferAttribute5","_super16","Int32BufferAttribute","_BufferAttribute6","_super17","Uint32BufferAttribute","_BufferAttribute7","_super18","Float16BufferAttribute","_BufferAttribute8","_super19","_this13","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_super20","Float64BufferAttribute","_BufferAttribute10","_super21","_id$2","_m1","_obj","_offset","_box$2","_boxMorphTargets","_vector$8","BufferGeometry","_EventDispatcher5","_super22","_this14","isBufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","drawRange","getIndex","setIndex","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","toNonIndexed","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$6","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_uvA$1","_uvB$1","_uvC$1","_normalA","_normalB","_normalC","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_super23","_this15","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection","BoxGeometry","_BufferGeometry","_super24","_this16","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy","ix","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","getRenderTarget","outputColorSpace","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","_Material2","_super25","_this17","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","clipCullDistance","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_super26","_this18","PerspectiveCamera","_Camera","_super27","_this19","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","_super28","renderTarget","_this20","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","_cameras","_slicedToArray","_iterator","_createForOfIteratorHelper","_step","err","_iterator2","_step2","scene","_this$children","currentRenderTarget","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","_Texture3","_super29","_this21","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget4","_super30","_this22","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$5","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","byteLength","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","updateRange","bufferSubData","subarray","deleteBuffer","delete","cached","elementSize","PlaneGeometry","_BufferGeometry2","_super31","_this23","width_half","height_half","segment_width","segment_height","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","batching_pars_vertex","batching_vertex","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","ior","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMap","sheenColorMapTransform","sheenRoughnessMap","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","WebGLBackground","cubemaps","cubeuvmaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","usePMREM","setClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","isInstancedBufferGeometry","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","renderMultiDraw","starts","counts","drawCount","multiDrawArraysWEBGL","elementCount","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","_Camera2","_super32","_this24","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","_oldActiveCubeFace","_oldActiveMipmapLevel","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","multiDrawElementsWEBGL","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","morphTextures","morph","workInfluences","objectInfluences","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","DepthTexture","_Texture4","_super33","_this25","isDepthTexture","compareFunction","emptyTexture","emptyShadowTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","emptyTexture2D","SAMPLER_2D_SHADOW","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","COMPLETION_STATUS_KHR","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","workingPrimaries","encodingPrimaries","gamutMapping","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","normalMapTangentSpace","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateVertexExtensions","extensionClipCullDistance","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customVertexExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderType","shaderName","batching","instancing","instancingColor","useFog","fogExp2","normalMapObjectSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","numLightProbes","useLegacyLights","decodeVideoTexture","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","onFirstUse","self","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","programReady","rendererExtensionParallelShaderCompile","isReady","destroy","deleteProgram","usedTimes","_id$1","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","_iterator3","_step3","shaderStage","code","getVertexShaderID","getFragmentShaderID","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","IS_WEBGL2","SUPPORTS_VERTEX_TEXTURES","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getChannel","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","IS_INSTANCEDMESH","IS_BATCHEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","HAS_ATTRIBUTE_UV1","HAS_ATTRIBUTE_UV2","HAS_ATTRIBUTE_UV3","isXRRenderTarget","supportsVertexTextures","isFogExp2","directional","spot","rectArea","hemi","shadowMap","_useLegacyLights","isVideoTexture","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderStateArray","renderState","_Material3","_super34","_this26","isMeshDepthMaterial","_Material4","_super35","_this27","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","_previousType","activeCubeFace","_state","setBlending","setTest","setScissorTest","toVSM","fromVSM","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","onMaterialDispose","shadowCamera","k","kl","depthMaterial","shadowMaterial","WebGLState","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentBlendColor","currentBlendAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","COLOR_ATTACHMENT0","BACK","drawBuffersWEBGL","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","MIN_EXT","MAX_EXT","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","utils","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RED_INTEGER","R8UI","R16UI","R32UI","R8I","R16I","R32I","RG","RG32F","RG16F","RG8","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","LINEAR","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","__webglFramebuffer","level","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","isCompressedArrayTexture","sourceProperties","texturePrimaries","unpackConversion","NONE","BROWSER_DEFAULT_WEBGL","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DEPTH_STENCIL","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","WebGLUtils","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","SRGB_ALPHA_EXT","RG_INTEGER","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","_PerspectiveCamera","_super36","_this28","isArrayCamera","Group","_Object3D4","_super37","_this29","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","_iterator4","_step4","inputjoint","_getHandJoint","disconnect","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","_iterator5","_step5","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","WebXRManager","_EventDispatcher6","_super38","_this30","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","currentSize","currentPixelRatio","cameraL","cameraR","cameraXR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setPixelRatio","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","_ref","_asyncToGenerator","_callee","layerInit","depthFormat","depthType","glDepthFormat","projectionlayerInit","_callee$","_context8","xrCompatible","makeXRCompatible","getPixelRatio","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","_x3","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","updateUserCamera","getCamera","getFoveation","fixedFoveation","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","detectedPlanes","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","uniformArray","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","indexArray","indexString","cachedObject","chunkSize","chunkOffsetUniform","boundary","chunkOffset","WebGLRenderer","_parameters$canvas","_parameters$context","_parameters$depth","_parameters$stencil","_parameters$alpha","_parameters$antialias","_parameters$premultip","_parameters$preserveD","preserveDrawingBuffer","_parameters$powerPref","powerPreference","_parameters$failIfMaj","failIfMajorPerformanceCaveat","isWebGLRenderer","_alpha","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","_outputColorSpace","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","onContextCreationError","isWebGL1Renderer","shift","WebGLRenderingContext","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","isIntegerFormat","targetFormat","targetType","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","isLineSegments","isLineLoop","isSprite","_multiDrawStarts","_multiDrawCounts","_multiDrawCount","maxInstanceCount","prepareMaterial","getProgram","targetScene","material2","compileAsync","checkMaterialsReady","setTimeout","projectObject","camera2","renderScene","isLOD","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","currentToneMapping","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","uniformsList","getUniformList","progUniforms","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","readPixels","copyFramebufferToTexture","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","drawingBufferColorSpace","unpackColorSpace","WebGL1Renderer","_WebGLRenderer","_super39","FogExp2","Fog","Scene","_Object3D5","_super40","_this31","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_Material5","_super41","_this32","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_super42","_this33","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_super43","_this34","_currentLevel","addLevel","hysteresis","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_matrix4","_vertex","_sphere$4","_inverseMatrix$2","_ray$2","SkinnedMesh","_Mesh","_super44","_this35","bindMatrixInverse","applyBoneTransform","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","boneTransform","Bone","_Object3D8","_super45","_this36","isBone","DataTexture","_Texture5","_super46","_this37","_offsetMatrix","_identityMatrix$1","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute11","_super47","_this38","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh$1","_sphere$3","InstancedMesh","_Mesh2","_super48","_this39","setMatrixAt","getMatrixAt","getColorAt","raycastTimes","instanceId","setColorAt","sortOpaque","sortTransparent","MultiDrawRenderList","pool","item","ID_ATTR_NAME","_matrix","_invMatrixWorld","_identityMatrix","_projScreenMatrix$2","_box$1","_sphere$2","_vector$5","_renderList","_mesh","_batchIntersects","copyAttributeData","targetOffset","vertexCount","BatchedMesh","_Mesh3","_super49","_this40","customSort","_visibilityChanged","_initMatricesTexture","matricesArray","_initializeGeometry","reference","attributeName","srcAttribute","dstAttribute","idArray","_validateGeometry","batchGeometry","Boolean","setCustomSort","func","getBoundingBoxAt","getBoundingSphereAt","addGeometry","indexCount","reservedRange","vertexStart","indexStart","lastRange","hasIndex","idAttribute","setGeometryAt","dstIndex","srcIndex","posAttr","deleteGeometry","iv","setVisibleAt","getVisibleAt","batchId","_objectSpread","multiDrawStarts","multiDrawCounts","isWebGPURenderer","culled","_Material6","_super50","_this41","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","_Object3D9","_super51","_this42","computeLineDistances","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","_start","_end","LineSegments","_Line","_super52","_this43","LineLoop","_Line2","_super53","_this44","_Material7","_super54","_this45","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_super55","_this46","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture6","_super56","video","_this47","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture7","_super57","_this48","CompressedTexture","_Texture8","_super58","_this49","CompressedArrayTexture","_CompressedTexture","_super59","_this50","CompressedCubeTexture","_CompressedTexture2","_super60","_this51","isCompressedCubeTexture","CanvasTexture","_Texture9","_super61","_this52","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","binormals","vec","mat","MAX_VALUE","EllipseCurve","_Curve","_super62","_this53","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","_super63","aRadius","_this54","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_super64","_this55","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_super65","_this56","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_super66","_this57","isCubicBezierCurve3","LineCurve","_Curve5","_super67","_this58","isLineCurve","LineCurve3","_Curve6","_super68","_this59","isLineCurve3","QuadraticBezierCurve","_Curve7","_super69","_this60","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_super70","_this61","isQuadraticBezierCurve3","SplineCurve","_Curve9","_super71","_this62","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_super72","_this63","curves","autoClose","curve","closePath","startPoint","endPoint","lineType","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","_CurvePath","_super73","_this64","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry3","_super74","_this65","phiStart","phiLength","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_super75","_this66","capSegments","radialSegments","CircleGeometry","_BufferGeometry4","_super76","_this67","thetaStart","thetaLength","segment","CylinderGeometry","_BufferGeometry5","_super77","_this68","radiusTop","radiusBottom","openEnded","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_super78","_this69","PolyhedronGeometry","_BufferGeometry6","_super79","_this70","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_super80","_this71","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry7","_super81","_this72","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Shape","_Path","_super82","_this73","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","minX","minY","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry8","_super83","_this74","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_super84","_this75","OctahedronGeometry","_PolyhedronGeometry3","_super85","_this76","RingGeometry","_BufferGeometry9","_super86","_this77","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_super87","_this78","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_super88","_this79","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_super89","_this80","TorusGeometry","_BufferGeometry12","_super90","_this81","tube","tubularSegments","TorusKnotGeometry","_BufferGeometry13","_super91","_this82","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_super92","_this83","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_super93","_this84","edges","ol","isUniqueEdge","hash1","hash2","Geometries","_Material8","_super94","_this85","RawShaderMaterial","_ShaderMaterial","_super95","_this86","_Material9","_super96","_this87","_MeshStandardMaterial","_super97","_this88","_anisotropy","_clearcoat","_iridescence","_sheen","_transmission","_Material10","_super98","_this89","_Material11","_super99","_this90","_Material12","_super100","_this91","_Material13","_super101","_this92","_Material14","_super102","_this93","_LineBasicMaterial","_super103","_this94","convertArray","forceClone","isTypedArray","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_super104","_this95","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","_super105","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","_super106","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","_super107","ColorKeyframeTrack","_KeyframeTrack2","_super108","NumberKeyframeTrack","_KeyframeTrack3","_super109","QuaternionLinearInterpolant","_Interpolant4","_super110","QuaternionKeyframeTrack","_KeyframeTrack4","_super111","StringKeyframeTrack","_KeyframeTrack5","_super112","VectorKeyframeTrack","_KeyframeTrack6","_super113","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","reject","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","_Error","_super114","response","_this96","_wrapNativeSuper","FileLoader","_Loader","_super115","_this97","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","_ref2","close","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","_super116","CompressedTextureLoader","_Loader3","_super117","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","_super118","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","_super119","urls","DataTextureLoader","_Loader6","_super120","texData","TextureLoader","_Loader7","_super121","Light","_Object3D11","_super122","_this98","HemisphereLight","_Light","_super123","_this99","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","_LightShadow","_super124","_this100","isSpotLightShadow","SpotLight","_Light2","_super125","_this101","power","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_super126","_this102","_cubeDirections","_cubeUps","PointLight","_Light3","_super127","_this103","DirectionalLightShadow","_LightShadow3","_super128","_this104","isDirectionalLightShadow","DirectionalLight","_Light4","_super129","_this105","AmbientLight","_Light5","_super130","_this106","RectAreaLight","_Light6","_super131","_this107","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_super132","_this108","MaterialLoader","_Loader8","_super133","_this109","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","_BufferGeometry16","_super134","_this110","BufferGeometryLoader","_Loader9","_super135","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_super136","_loadAsync","_callee2","_callee2$","_context10","parseAsync","_x7","_x8","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","_parseAsync","_callee3","_callee3$","_context11","parseImagesAsync","_x9","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee5","_deserializeImage","_deserializedImage2","_callee5$","_context13","_deserializeImage3","_callee4","_url","_callee4$","_context12","_deserializeImage2","_x11","_x10","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_super137","_this111","isImageBitmapLoader","createImageBitmap","setOptions","imageBitmap","fetchOptions","promise","res","colorSpaceConversion","_context","AudioContext","window","webkitAudioContext","AudioLoader","_Loader12","_super138","bufferCopy","decodeAudioData","audioBuffer","handleError","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_super139","_this112","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_super140","_this113","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_super141","_this114","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher7","_super142","_this115","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","_id","UniformsGroup","_EventDispatcher8","_super143","_this116","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_super144","_this117","GLBufferAttribute","setType","setItemSize","setCount","Raycaster","setFromCamera","coords","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_super145","_this118","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_super146","_this119","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh4","_super147","sphereSize","_this120","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_super148","_this121","GridHelper","_LineSegments2","_super149","_this122","PolarGridHelper","_LineSegments3","_super150","_this123","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_super151","_this124","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_super152","_this125","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","_LineSegments5","_super153","_this126","Box3Helper","_LineSegments6","_super154","_this127","PlaneHelper","_Line3","_super155","_this128","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_super156","_this129","headLength","headWidth","setDirection","setColor","AxesHelper","_LineSegments7","_super157","_this130","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","revision","__THREE__","_three","require","subClass","superClass","_setPrototypeOf","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","NewTarget","Reflect","construct","_possibleConstructorReturn","ReferenceError","sham","Proxy","valueOf","_changeEvent","_startEvent","_endEvent","_plane","TILT_LIMIT","OrbitControls","touchAction","cursor","minDistance","minZoom","maxZoom","minTargetRadius","maxTargetRadius","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","zoomToCursor","autoRotate","autoRotateSpeed","UP","BOTTOM","mouseButtons","touches","TWO","target0","position0","zoom0","_domElementKeyEvents","getPolarAngle","spherical","getAzimuthalAngle","getDistance","listenToKeyEvents","onKeyDown","stopListenToKeyEvents","saveState","STATE","quat","quatInverse","lastPosition","lastQuaternion","lastTargetPosition","twoPI","rotateLeft","getAutoRotationAngle","sphericalDelta","panOffset","performCursorZoom","clampDistance","zoomChanged","newRadius","prevRadius","radiusDelta","dollyDirection","mouseBefore","mouse","mouseAfter","onContextMenu","onPointerDown","onPointerUp","onMouseWheel","onPointerMove","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","normalized_delta","devicePixelRatio","rotateUp","panLeft","objectMatrix","panUp","pan","deltaX","deltaY","targetDistance","clientHeight","clientWidth","dollyOut","dollyScale","dollyIn","updateZoomParameters","rect","getBoundingClientRect","dist","handleMouseDownRotate","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","ctrlKey","metaKey","shiftKey","handleTouchStartRotate","pageX","pageY","getSecondPointerPosition","handleTouchStartPan","handleTouchStartDolly","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","handleTouchMovePan","handleTouchMoveDolly","centerX","centerY","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","setPointerCapture","pointerId","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","releasePointerCapture","mouseAction","button","trackPointer","passive","forceCSSHex","__state","conversionName","str","ARR_EACH","ARR_SLICE","Common","each","obj","isObject","isUndefined","toCall","args","itr","BREAK","fnc","callImmediately","timeout","delayed","callNow","Function","INTERPRETATIONS","isString","original","isNumber","toReturn","interpret","family","litmus","conversions","conversion","tmpComponent","ColorMath","hi","NaN","hex_with_component","componentIndex","colorToString","write","defineRGBComponent","componentHexIndex","recalculateRGB","defineHSVComponent","recalculateHSV","math","component_from_hex","extend","hsv_to_rgb","rgb_to_hsv","COMPONENTS","rgb_to_hex","Controller","initialValue","createElement","__onChange","__onFinishChange","updateDisplay","EVENT_MAP","EVENT_MAP_INV","CSS_VALUE_PIXELS","cssValueToPixels","isNull","dom","elem","selectable","onselectstart","MozUserSelect","KhtmlUserSelect","unselectable","hor","vertical","horizontal","eventType","aux","className","evt","createEvent","initMouseEvent","bubbles","cancelable","clickCount","initKeyboardEvent","initKeyEvent","defaults","altKey","keyCode","charCode","initEvent","newBool","bool","attachEvent","detachEvent","classes","removeAttribute","getComputedStyle","el","offsetParent","offsetLeft","offsetTop","activeElement","href","BooleanController","__prev","__checkbox","onChange","appendChild","checked","OptionController","opts","__select","opt","innerHTML","desiredValue","selectedIndex","isActive","StringController","__input","onBlur","blur","numDecimals","NumberController","_params","__min","__max","__step","__impliedStep","LN10","__precision","_v","minValue","maxValue","stepValue","roundToDecimal","decimals","tenTo","NumberControllerBox","__truncationSuspended","prevY","attempted","onFinish","onMouseDrag","onMouseUp","NumberControllerSlider","__background","__foreground","addClass","bgRect","onTouchEnd","pct","FunctionController","__button","fire","ColorController","__color","__temp","makeSelectable","__selector","__saturation_field","__field_knob","__field_knob_border","__hue_knob","__hue_field","__input_textShadow","removeClass","valueField","fieldDown","fieldDownH","setSV","fieldUpSV","setH","fieldUpH","toOriginal","fieldRect","mismatch","flip","_flip","toHexString","marginTop","vendors","linearGradient","vendor","cssText","hueGradient","css","indoc","doc","link","rel","getElementsByTagName","cssContent","injected","head","saveDialogContents","ControllerFactory","isFunction","isBoolean","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","CenteredDiv","backgroundElement","makeFullscreen","hide","webkitTransform","layout","defer","innerWidth","getWidth","innerHeight","getHeight","inject","styleSheet","CSS_NAMESPACE","HIDE_KEY_CODE","CLOSE_BUTTON_HEIGHT","DEFAULT_DEFAULT_PRESET_NAME","SUPPORTS_LOCAL_STORAGE","localStorage","SAVE_DIALOGUE","autoPlaceVirgin","autoPlaceContainer","hideableGuis","GUI","__ul","__folders","__controllers","__rememberedObjects","__rememberedObjectIndecesToControllers","__listening","DEFAULT_WIDTH","autoPlace","preset","hideable","resizable","scrollable","useLocalStorage","getItem","getLocalStorageHash","saveToLocalStorage","titleRow","closeOnTop","revert","CLASS_CLOSED","onResize","__closeButton","TEXT_OPEN","TEXT_CLOSED","setItem","CLASS_MAIN","savedGui","CLASS_CLOSE_BUTTON","CLASS_CLOSE_TOP","insertBefore","childNodes","CLASS_CLOSE_BOTTOM","titleRowName","createTextNode","addRow","onClickTitle","CLASS_AUTO_PLACE_CONTAINER","CLASS_AUTO_PLACE","__resizeHandler","onResizeDebounced","getSaveObject","saveToLocalStorageIfPossible","resetWidth","toggleHide","gui","CLASS_CONTROLLER_ROW","CLASS_TOO_TALL","CLASS_DRAG","_keydownHandler","which","removeChild","__li","subfolder","removeFolder","newGuiParams","folders","li","folder","parentElement","getOffset","__save_row","__resize_handle","offsetHeight","debounce","saveDialogueContents","remembered","getCurrentPreset","presetName","newDom","liBefore","removeListeners","markPresetModified","modified","__preset_select","augmentController","__gui","nextSibling","nextElementSibling","firstElementChild","listen","pc","pb","returned","oldName","wasListening","newController","fakeEvent","stopPropagation","borderLeftColor","isModified","recallSavedValue","matchedIndex","controllerMap","presetMap","factoryArgs","before","addPresetOption","setSelected","showHideExplain","explain","addSaveMenu","div","firstChild","gears","button2","button3","select","getElementById","localStorageCheckBox","saveLocally","newConstructorTextArea","show","save","prompt","saveAs","addResizeHandle","pmouseX","drag","dragStop","dragStart","setWidth","useInitialValues","savedValues","setPresetSelectIndex","updateDisplays","controllerArray","domImport","GUIImport","THREE","_interopRequireWildcard","_OrbitControls","dat","_getRequireWildcardCache","__esModule","default","getOwnPropertyDescriptor","allowArrayLike","it","_unsupportedIterableToArray","F","_e","normalCompletion","didErr","_e2","minLen","_arrayLikeToArray","arr","arr2","boidMinSpeed","boidMaxSpeed","boidMinForce","boidMaxForce","updateSpeedRange","updateForceRange","main","querySelector","setupRenderer","setupCamera","controls","setupControls","setupLighting","worldBounds","createWorldBounds","boids","setupBoids","updateScene","getRandomColor","brightColors","makeBoidInstance","boidGeometry","maxSpeed","minSpeed","spawnRadius","boid","velocity","spawnPoint","ambientLight","mainLight","edgeGeometry","boidRadius","boidHeight","numberOfBoids","align","perceptionRadius","steering","cohesion","separation","resizeRendererToDisplaySize","alignment","cohesionForce","separationForce","wrapAround","wrapped","needResize","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","stackTrace","innerText","getParents","modules","parents","dep","deps","some"],"mappings":"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","file":"Boid-Simulation.e31bb0bc.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright 2010-2023 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '160';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst TwoPassDoubleSide = 2; // r149\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst ConstantColorFactor = 211;\nconst OneMinusConstantColorFactor = 212;\nconst ConstantAlphaFactor = 213;\nconst OneMinusConstantAlphaFactor = 214;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\nconst AgXToneMapping = 6;\nconst AttachedBindMode = 'attached';\nconst DetachedBindMode = 'detached';\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\n/** @deprecated Use LinearSRGBColorSpace or NoColorSpace in three.js r152+. */\nconst LinearEncoding = 3000;\n/** @deprecated Use SRGBColorSpace in three.js r152+. */\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst DisplayP3ColorSpace = 'display-p3';\nconst LinearDisplayP3ColorSpace = 'display-p3-linear';\n\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\n\nconst Rec709Primaries = 'rec709';\nconst P3Primaries = 'p3';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\n/**\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n */\n\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/ new Matrix3().set(\n\t0.8224621, 0.177538, 0.0,\n\t0.0331941, 0.9668058, 0.0,\n\t0.0170827, 0.0723974, 0.9105199,\n);\n\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = /*@__PURE__*/ new Matrix3().set(\n\t1.2249401, - 0.2249404, 0.0,\n\t- 0.0420569, 1.0420571, 0.0,\n\t- 0.0196376, - 0.0786361, 1.0982735\n);\n\n/**\n * Defines supported color spaces by transfer function and primaries,\n * and provides conversions to/from the Linear-sRGB reference space.\n */\nconst COLOR_SPACES = {\n\t[ LinearSRGBColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color,\n\t\tfromReference: ( color ) => color,\n\t},\n\t[ SRGBColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear(),\n\t\tfromReference: ( color ) => color.convertLinearToSRGB(),\n\t},\n\t[ LinearDisplayP3ColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ),\n\t},\n\t[ DisplayP3ColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear().applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ).convertLinearToSRGB(),\n\t},\n};\n\nconst SUPPORTED_WORKING_COLOR_SPACES = new Set( [ LinearSRGBColorSpace, LinearDisplayP3ColorSpace ] );\n\nconst ColorManagement = {\n\n\tenabled: true,\n\n\t_workingColorSpace: LinearSRGBColorSpace,\n\n\tget workingColorSpace() {\n\n\t\treturn this._workingColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tif ( ! SUPPORTED_WORKING_COLOR_SPACES.has( colorSpace ) ) {\n\n\t\t\tthrow new Error( `Unsupported working color space, \"${ colorSpace }\".` );\n\n\t\t}\n\n\t\tthis._workingColorSpace = colorSpace;\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tconst sourceToReference = COLOR_SPACES[ sourceColorSpace ].toReference;\n\t\tconst targetFromReference = COLOR_SPACES[ targetColorSpace ].fromReference;\n\n\t\treturn targetFromReference( sourceToReference( color ) );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this._workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this._workingColorSpace );\n\n\t},\n\n\tgetPrimaries: function ( colorSpace ) {\n\n\t\treturn COLOR_SPACES[ colorSpace ].primaries;\n\n\t},\n\n\tgetTransfer: function ( colorSpace ) {\n\n\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\treturn COLOR_SPACES[ colorSpace ].transfer;\n\n\t},\n\n};\n\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tif ( typeof colorSpace === 'string' ) {\n\n\t\t\tthis.colorSpace = colorSpace;\n\n\t\t} else { // @deprecated, r152\n\n\t\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\t\tthis.colorSpace = colorSpace === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tget encoding() { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\treturn this.colorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset encoding( encoding ) { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\tthis.colorSpace = encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\toptions = Object.assign( {\n\t\t\tgenerateMipmaps: false,\n\t\t\tinternalFormat: null,\n\t\t\tminFilter: LinearFilter,\n\t\t\tdepthBuffer: true,\n\t\t\tstencilBuffer: false,\n\t\t\tdepthTexture: null,\n\t\t\tsamples: 0\n\t\t}, options );\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps;\n\t\tthis.texture.internalFormat = options.internalFormat;\n\n\t\tthis.depthBuffer = options.depthBuffer;\n\t\tthis.stencilBuffer = options.stencilBuffer;\n\n\t\tthis.depthTexture = options.depthTexture;\n\n\t\tthis.samples = options.samples;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update = true ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize(); // normalize calls _onChangeCallback()\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\n\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tif ( object.isMesh === true ) {\n\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$b );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_vector$b.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_vector$b.applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\t\t\t// object-level bounding box\n\n\t\t\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( object.boundingBox );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// geometry-level bounding box\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( geometry.boundingBox );\n\n\t\t\t\t}\n\n\t\t\t\t_box$4.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$4 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$3 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.isSphere = true;\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$3.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$1.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$1, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value, result = [] ) {\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\tif ( this.isBatchedMesh ) {\n\n\t\t\tobject.type = 'BatchedMesh';\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\t\tobject.sortObjects = this.sortObjects;\n\n\t\t\tobject.drawRanges = this._drawRanges;\n\t\t\tobject.reservedRanges = this._reservedRanges;\n\n\t\t\tobject.visibility = this._visibility;\n\t\t\tobject.active = this._active;\n\t\t\tobject.bounds = this._bounds.map( bound => ( {\n\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\tboxMin: bound.box.min.toArray(),\n\t\t\t\tboxMax: bound.box.max.toArray(),\n\n\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\tsphereRadius: bound.sphere.radius,\n\t\t\t\tsphereCenter: bound.sphere.center.toArray()\n\t\t\t} ) );\n\n\t\t\tobject.maxGeometryCount = this._maxGeometryCount;\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\n\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\n\t\t\tobject.geometryCount = this._geometryCount;\n\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tobject.boundingSphere = {\n\t\t\t\t\tcenter: object.boundingSphere.center.toArray(),\n\t\t\t\t\tradius: object.boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tobject.boundingBox = {\n\t\t\t\t\tmin: object.boundingBox.min.toArray(),\n\t\t\t\t\tmax: object.boundingBox.max.toArray()\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nlet warnedGetUV = false;\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\ttarget.set( 0, 0, 0 );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\t// if the triangle is degenerate then we can't contain a point\n\t\tif ( this.getBarycoord( point, a, b, c, _v3$1 ) === null ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn this.getInterpolation( point, p1, p2, p3, uv1, uv2, uv3, target );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tif ( this.getBarycoord( point, p1, p2, p3, _v3$1 ) === null ) {\n\n\t\t\ttarget.x = 0;\n\t\t\ttarget.y = 0;\n\t\t\tif ( 'z' in target ) target.z = 0;\n\t\t\tif ( 'w' in target ) target.w = 0;\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$1.x );\n\t\ttarget.addScaledVector( v2, _v3$1.y );\n\t\ttarget.addScaledVector( v3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.blendColor = new Color( 0, 0, 0 );\n\t\tthis.blendAlpha = 0;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\n\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\n\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\tthis.blendColor.copy( source.blendColor );\n\t\tthis.blendAlpha = source.blendAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\tconsole.warn( 'THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$2 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$2 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$6 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _normalA = /*@__PURE__*/ new Vector3();\nconst _normalB = /*@__PURE__*/ new Vector3();\nconst _normalC = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$6.copy( geometry.boundingSphere );\n\t\t_sphere$6.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$6.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$6, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv1, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv1, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv1, c );\n\n\t\t\tintersection.uv1 = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\t\t\tintersection.uv2 = intersection.uv1; // @deprecated, r152\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\t_normalA.fromBufferAttribute( normal, a );\n\t\t\t_normalB.fromBufferAttribute( normal, b );\n\t\t\t_normalC.fromBufferAttribute( normal, c );\n\n\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _normalA, _normalB, _normalC, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tif ( renderer.getRenderTarget() === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\treturn ColorManagement.workingColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false, // set to use shader texture LOD\n\t\t\tclipCullDistance: false // set to use vertex shader clipping\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\treturn super.getWorldDirection( target ).negate();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\t\tthis.activeMipmapLevel = 0;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst { renderTarget, activeMipmapLevel } = this;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\t// mipmaps are generated during the last call of render()\n\t\t// at this point, all sides of the cube render target are defined\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$5.center.set( 0, 0, 0 );\n\t\t_sphere$5.radius = 0.7071067811865476;\n\t\t_sphere$5.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\t\tconst size = array.byteLength;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version,\n\t\t\tsize: size\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute._updateRange; // deprecated\n\t\tconst updateRanges = attribute.updateRanges;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 && updateRanges.length === 0 ) {\n\n\t\t\t// Not using update ranges\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t}\n\n\t\tif ( updateRanges.length !== 0 ) {\n\n\t\t\tfor ( let i = 0, l = updateRanges.length; i < l; i ++ ) {\n\n\t\t\t\tconst range = updateRanges[ i ];\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray, range.start, range.count );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray.subarray( range.start, range.start + range.count ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tattribute.clearUpdateRanges();\n\n\t\t}\n\n\t\t// deprecated\n\t\tif ( updateRange.count !== - 1 ) {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tif ( data.size !== attribute.array.byteLength ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: The size of the buffer attribute\\'s array buffer does not match the original size. Resizing buffer attributes is not supported.' );\n\n\t\t\t}\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_CLEARCOAT ) \\n\\t\\tclearcoatSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_SHEEN ) \\n\\t\\tsheenSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar batching_pars_vertex = \"#ifdef USE_BATCHING\\n\\tattribute float batchId;\\n\\tuniform highp sampler2D batchingTexture;\\n\\tmat4 getBatchingMatrix( const in float i ) {\\n\\t\\tint size = textureSize( batchingTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar batching_vertex = \"#ifdef USE_BATCHING\\n\\tmat4 batchingMatrix = getBatchingMatrix( batchId );\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\\n\\t\\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = objectTangent;\\n#endif\\n#ifdef USE_BATCHING\\n\\tmat3 bm = mat3( batchingMatrix );\\n\\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\\n\\ttransformedNormal = bm * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = bm * transformedTangent;\\n\\t#endif\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmat3 im = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\\n\\ttransformedNormal = im * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = im * transformedTangent;\\n\\t#endif\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"\\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\\n\\tvec3( 0.8224621, 0.177538, 0.0 ),\\n\\tvec3( 0.0331941, 0.9668058, 0.0 ),\\n\\tvec3( 0.0170827, 0.0723974, 0.9105199 )\\n);\\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.2249401, - 0.2249404, 0.0 ),\\n\\tvec3( - 0.0420569, 1.0420571, 0.0 ),\\n\\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\\n);\\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\\n}\\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\\n}\\nvec4 LinearTransferOETF( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 sRGBTransferOETF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn sRGBTransferOETF( value );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\n#if defined( USE_LIGHT_PROBES )\\n\\tuniform vec3 lightProbe[ 9 ];\\n#endif\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( LEGACY_LIGHTS )\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#else\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tif( material.anisotropy == 0.0 ) {\\n\\t\\tanisotropyV = vec2( 1.0, 0.0 );\\n\\t} else {\\n\\t\\tanisotropyV /= material.anisotropy;\\n\\t\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\t}\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\\nvec3 sheenSpecularDirect = vec3( 0.0 );\\nvec3 sheenSpecularIndirect = vec3(0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometryNormal;\\n\\t\\tvec3 viewDir = geometryViewDir;\\n\\t\\tvec3 position = geometryPosition;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nvec3 geometryPosition = - vViewPosition;\\nvec3 geometryNormal = normal;\\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\nvec3 geometryClearcoatNormal = vec3( 0.0 );\\n#ifdef USE_CLEARCOAT\\n\\tgeometryClearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometryPosition, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if defined( USE_LIGHT_PROBES )\\n\\t\\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometryNormal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 nonPerturbedNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = nonPerturbedNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_BATCHING\\n\\tmvPosition = batchingMatrix * mvPosition;\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tint size = textureSize( boneTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.6605, - 0.1246, - 0.0182 ),\\n\\tvec3( - 0.5876, 1.1329, - 0.1006 ),\\n\\tvec3( - 0.0728, - 0.0083, 1.1187 )\\n);\\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\\n\\tvec3( 0.6274, 0.0691, 0.0164 ),\\n\\tvec3( 0.3293, 0.9195, 0.0880 ),\\n\\tvec3( 0.0433, 0.0113, 0.8956 )\\n);\\nvec3 agxDefaultContrastApprox( vec3 x ) {\\n\\tvec3 x2 = x * x;\\n\\tvec3 x4 = x2 * x2;\\n\\treturn + 15.5 * x4 * x2\\n\\t\\t- 40.14 * x4 * x\\n\\t\\t+ 31.96 * x4\\n\\t\\t- 6.868 * x2 * x\\n\\t\\t+ 0.4298 * x2\\n\\t\\t+ 0.1191 * x\\n\\t\\t- 0.00232;\\n}\\nvec3 AgXToneMapping( vec3 color ) {\\n\\tconst mat3 AgXInsetMatrix = mat3(\\n\\t\\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\\n\\t\\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\\n\\t\\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\\n\\t);\\n\\tconst mat3 AgXOutsetMatrix = mat3(\\n\\t\\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\\n\\t\\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\\n\\t\\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\\n\\t);\\n\\tconst float AgxMinEv = - 12.47393;\\tconst float AgxMaxEv = 4.026069;\\n\\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = AgXInsetMatrix * color;\\n\\tcolor = max( color, 1e-10 );\\tcolor = log2( color );\\n\\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\tcolor = agxDefaultContrastApprox( color );\\n\\tcolor = AgXOutsetMatrix * color;\\n\\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\\n\\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\\n\\treturn color;\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_BATCHING\\n\\t\\tworldPosition = batchingMatrix * worldPosition;\\n\\t#endif\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbatching_pars_vertex: batching_pars_vertex,\n\tbatching_vertex: batching_vertex,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst environmentBlendMode = renderer.xr.getEnvironmentBlendMode();\n\n\t\tif ( environmentBlendMode === 'additive' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\n\t\t} else if ( environmentBlendMode === 'alpha-blend' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes (WebGL 2 only)\n\n\t\t\t\t\tconst integer = ( capabilities.isWebGL2 === true && ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType ) );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\tthis.render( starts[ i ], counts[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawArraysWEBGL( mode, starts, 0, counts, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl.constructor.name === 'WebGL2RenderingContext';\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( gl.MAX_SAMPLES ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\nlet _oldActiveCubeFace = 0;\nlet _oldActiveMipmapLevel = 0;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget, _oldActiveCubeFace, _oldActiveMipmapLevel );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\t\t\t\tgetExtension( 'WEBGL_clip_cull_distance' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tconst array = geometry.morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.remove( array[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else if ( geometryPosition !== undefined ) {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\tthis.render( starts[ i ] / bytesPerElement, counts[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawElementsWEBGL( mode, counts, 0, type, starts, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\n\nconst emptyShadowTexture = /*@__PURE__*/ new DepthTexture( 1, 1 );\nemptyShadowTexture.compareFunction = LessEqualCompare;\n\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\tconst emptyTexture2D = ( this.type === gl.SAMPLER_2D_SHADOW ) ? emptyShadowTexture : emptyTexture;\n\n\ttextures.setTexture2D( v || emptyTexture2D, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\n// From https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/\nconst COMPLETION_STATUS_KHR = 0x91B1;\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\tconst encodingPrimaries = ColorManagement.getPrimaries( colorSpace );\n\n\tlet gamutMapping;\n\n\tif ( workingPrimaries === encodingPrimaries ) {\n\n\t\tgamutMapping = '';\n\n\t} else if ( workingPrimaries === P3Primaries && encodingPrimaries === Rec709Primaries ) {\n\n\t\tgamutMapping = 'LinearDisplayP3ToLinearSRGB';\n\n\t} else if ( workingPrimaries === Rec709Primaries && encodingPrimaries === P3Primaries ) {\n\n\t\tgamutMapping = 'LinearSRGBToLinearDisplayP3';\n\n\t}\n\n\tswitch ( colorSpace ) {\n\n\t\tcase LinearSRGBColorSpace:\n\t\tcase LinearDisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t\tcase SRGBColorSpace:\n\t\tcase DisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'sRGBTransferOETF' ];\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space:', colorSpace );\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\treturn `vec4 ${functionName}( vec4 value ) { return ${components[ 0 ]}( ${components[ 1 ]}( value ) ); }`;\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase AgXToneMapping:\n\t\t\ttoneMappingName = 'AgX';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.normalMapTangentSpace || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateVertexExtensions( parameters ) {\n\n\tconst chunks = [\n\t\tparameters.extensionClipCullDistance ? '#extension GL_ANGLE_clip_cull_distance : require' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map( [\n\t[ 'encodings_fragment', 'colorspace_fragment' ], // @deprecated, r154\n\t[ 'encodings_pars_fragment', 'colorspace_pars_fragment' ], // @deprecated, r154\n\t[ 'output_fragment', 'opaque_fragment' ], // @deprecated, r154\n] );\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customVertexExtensions = generateVertexExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.extensionClipCullDistance ? '#define USE_CLIP_DISTANCE' : '',\n\t\t\tparameters.batching ? '#define USE_BATCHING' : '',\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\tcustomVertexExtensions,\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tfunction onFirstUse( self ) {\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// default error reporting\n\n\t\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\t\tfragmentErrors\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tself.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up\n\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t}\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t// Populates cachedUniforms and cachedAttributes\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t// Populates cachedAttributes and cachedUniforms\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// indicate when the program is ready to be used. if the KHR_parallel_shader_compile extension isn't supported,\n\t// flag the program as ready immediately. It may cause a stall when it's first used.\n\n\tlet programReady = ( parameters.rendererExtensionParallelShaderCompile === false );\n\n\tthis.isReady = function () {\n\n\t\tif ( programReady === false ) {\n\n\t\t\tprogramReady = gl.getProgramParameter( program, COMPLETION_STATUS_KHR );\n\n\t\t}\n\n\t\treturn programReady;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id$1 = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id$1 ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst IS_WEBGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\t\tconst IS_BATCHEDMESH = object.isBatchedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tconst HAS_ATTRIBUTE_UV1 = !! geometry.attributes.uv1;\n\t\tconst HAS_ATTRIBUTE_UV2 = !! geometry.attributes.uv2;\n\t\tconst HAS_ATTRIBUTE_UV3 = !! geometry.attributes.uv3;\n\n\t\tlet toneMapping = NoToneMapping;\n\n\t\tif ( material.toneMapped ) {\n\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\ttoneMapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: IS_WEBGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tbatching: IS_BATCHEDMESH,\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUv1s: HAS_ATTRIBUTE_UV1,\n\t\t\tvertexUv2s: HAS_ATTRIBUTE_UV2,\n\t\t\tvertexUv3s: HAS_ATTRIBUTE_UV3,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumLightProbes: lights.numLightProbes,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: toneMapping,\n\t\t\tuseLegacyLights: renderer._useLegacyLights,\n\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.map.colorSpace ) === SRGBTransfer ),\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: HAS_EXTENSIONS && material.extensions.derivatives === true,\n\t\t\textensionFragDepth: HAS_EXTENSIONS && material.extensions.fragDepth === true,\n\t\t\textensionDrawBuffers: HAS_EXTENSIONS && material.extensions.drawBuffers === true,\n\t\t\textensionShaderTextureLOD: HAS_EXTENSIONS && material.extensions.shaderTextureLOD === true,\n\t\t\textensionClipCullDistance: HAS_EXTENSIONS && material.extensions.clipCullDistance && extensions.has( 'WEBGL_clip_cull_distance' ),\n\n\t\t\trendererExtensionFragDepth: IS_WEBGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: IS_WEBGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: IS_WEBGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\t\t\trendererExtensionParallelShaderCompile: extensions.has( 'KHR_parallel_shader_compile' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.numLightProbes );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.alphaHash )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.batching )\n\t\t\t_programLayers.enable( 19 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.useLegacyLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 19 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1,\n\n\t\t\tnumLightProbes: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0,\n\t\tnumLightProbes: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, useLegacyLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\tlet numLightProbes = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( useLegacyLights === true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t\tnumLightProbes ++;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ||\n\t\t\thash.numLightProbes !== numLightProbes ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\t\t\tstate.numLightProbes = numLightProbes;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\thash.numLightProbes = numLightProbes;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( useLegacyLights ) {\n\n\t\tlights.setup( lightsArray, useLegacyLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\t\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = _renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\tobject.onBeforeShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\tobject.onAfterShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\tobject.onBeforeShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\tobject.onAfterShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t// make sure to remove the unique distance/depth materials used for shadow map rendering\n\n\t\tfor ( const id in _materialCache ) {\n\n\t\t\tconst cache = _materialCache[ id ];\n\n\t\t\tconst uuid = event.target.uuid;\n\n\t\t\tif ( uuid in cache ) {\n\n\t\t\t\tconst shadowMaterial = cache[ uuid ];\n\t\t\t\tshadowMaterial.dispose();\n\t\t\t\tdelete cache[ uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentBlendColor = new Color( 0, 0, 0 );\n\tlet currentBlendAlpha = 0;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( isWebGL2 && ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\tif ( isWebGL2 ) {\n\n\t\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\t\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t}\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = gl.COLOR_ATTACHMENT0;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = gl.MIN;\n\t\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA,\n\t\t[ ConstantColorFactor ]: gl.CONSTANT_COLOR,\n\t\t[ OneMinusConstantColorFactor ]: gl.ONE_MINUS_CONSTANT_COLOR,\n\t\t[ ConstantAlphaFactor ]: gl.CONSTANT_ALPHA,\n\t\t[ OneMinusConstantAlphaFactor ]: gl.ONE_MINUS_CONSTANT_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, blendColor, blendAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\tcurrentBlendColor.set( 0, 0, 0 );\n\t\t\t\tcurrentBlendAlpha = 0;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tif ( blendColor.equals( currentBlendColor ) === false || blendAlpha !== currentBlendAlpha ) {\n\n\t\t\tgl.blendColor( blendColor.r, blendColor.g, blendColor.b, blendAlpha );\n\n\t\t\tcurrentBlendColor.copy( blendColor );\n\t\t\tcurrentBlendAlpha = blendAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.blendColor, material.blendAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\t\tgl.blendColor( 0, 0, 0, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentBlendColor = new Color( 0, 0, 0 );\n\t\tcurrentBlendAlpha = 0;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tconst transfer = forceLinearTransfer ? LinearTransfer : ColorManagement.getTransfer( colorSpace );\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( transfer === SRGBTransfer ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\n\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\n\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, capabilities.maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true && glInternalFormat !== RGB_ETC1_Format );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, capabilities.maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, level );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = ( isWebGL2 === true ) ? _gl.DEPTH_COMPONENT24 : _gl.DEPTH_COMPONENT16;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, 0 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( capabilities.maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( ColorManagement.getTransfer( colorSpace ) === SRGBTransfer ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tconst transfer = ColorManagement.getTransfer( colorSpace );\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( transfer === SRGBTransfer ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format || p === RGB_BPTC_SIGNED_Format || p === RGB_BPTC_UNSIGNED_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\t\t\t\tif ( p === RGB_BPTC_SIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;\n\t\t\t\tif ( p === RGB_BPTC_UNSIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\tconst currentSize = new Vector2();\n\t\tlet currentPixelRatio = null;\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\t\tcameraXR.layers.enable( 1 );\n\t\tcameraXR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\trenderer.setPixelRatio( currentPixelRatio );\n\t\t\trenderer.setSize( currentSize.width, currentSize.height, false );\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\trenderer.getSize( currentSize );\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glProjLayer.textureWidth, glProjLayer.textureHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer._useLegacyLights === true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tif ( hasUniformChanged( uniform, i, j, cache ) === true ) {\n\n\t\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\t\tfor ( let k = 0; k < values.length; k ++ ) {\n\n\t\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t\t// TODO add integer and struct support\n\t\t\t\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\t\tuniform.__data[ 3 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\t\tuniform.__data[ 7 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\t\tuniform.__data[ 11 ] = 0;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, indexArray, cache ) {\n\n\t\tconst value = uniform.value;\n\t\tconst indexString = index + '_' + indexArray;\n\n\t\tif ( cache[ indexString ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tcache[ indexString ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tcache[ indexString ] = value.clone();\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\tconst cachedObject = cache[ indexString ];\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tif ( cachedObject !== value ) {\n\n\t\t\t\t\tcache[ indexString ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\n\n\t\t\t\t\tcachedObject.copy( value );\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tfor ( let k = 0, kl = values.length; k < kl; k ++ ) {\n\n\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t// Calculate the chunk offset\n\t\t\t\t\tconst chunkOffsetUniform = offset % chunkSize;\n\n\t\t\t\t\t// Check for chunk overflow\n\t\t\t\t\tif ( chunkOffsetUniform !== 0 && ( chunkSize - chunkOffsetUniform ) < info.boundary ) {\n\n\t\t\t\t\t\t// Add padding and adjust offset\n\t\t\t\t\t\toffset += ( chunkSize - chunkOffsetUniform );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\t\t\tuniform.__offset = offset;\n\n\n\t\t\t\t\t// Update the global offset\n\t\t\t\t\toffset += info.storage;\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tconst chunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t// float/int/bool\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = true,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis._outputColorSpace = SRGBColorSpace;\n\n\t\t// physical lights\n\n\t\tthis._useLegacyLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// transmission\n\n\t\tlet _transmissionRenderTarget = null;\n\n\t\t// camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector2 = new Vector2();\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\t\tconst contextName = contextNames[ i ];\n\t\t\t\tconst context = canvas.getContext( contextName, contextAttributes );\n\t\t\t\tif ( context !== null ) return context;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\t\tcontextNames.shift();\n\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && _gl instanceof WebGLRenderingContext ) { // @deprecated, r153\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163.' );\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\textensions.init( capabilities );\n\n\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil ) {\n\n\t\t\t\tbits |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\tthis.state.buffers.stencil.setMask( 0xffffffff );\n\n\t\t\t}\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t\t_transmissionRenderTarget = null;\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\n\t\t\t\tif ( index === undefined ) return;\n\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\trenderer.renderMultiDraw( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount );\n\n\t\t\t} else if ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tfunction prepareMaterial( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.compile = function ( scene, camera, targetScene = null ) {\n\n\t\t\tif ( targetScene === null ) targetScene = scene;\n\n\t\t\tcurrentRenderState = renderStates.get( targetScene );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t// gather lights from both the target scene and the new object that will be added to the scene.\n\n\t\t\ttargetScene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( scene !== targetScene ) {\n\n\t\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\t// Only initialize materials in the new scene, not the targetScene.\n\n\t\t\tconst materials = new Set();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepareMaterial( material2, targetScene, object );\n\t\t\t\t\t\t\tmaterials.add( material2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepareMaterial( material, targetScene, object );\n\t\t\t\t\t\tmaterials.add( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t\treturn materials;\n\n\t\t};\n\n\t\t// compileAsync\n\n\t\tthis.compileAsync = function ( scene, camera, targetScene = null ) {\n\n\t\t\tconst materials = this.compile( scene, camera, targetScene );\n\n\t\t\t// Wait for all the materials in the new object to indicate that they're\n\t\t\t// ready to be used before resolving the promise.\n\n\t\t\treturn new Promise( ( resolve ) => {\n\n\t\t\t\tfunction checkMaterialsReady() {\n\n\t\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\t\tconst materialProperties = properties.get( material );\n\t\t\t\t\t\tconst program = materialProperties.currentProgram;\n\n\t\t\t\t\t\tif ( program.isReady() ) {\n\n\t\t\t\t\t\t\t// remove any programs that report they're ready to use from the list\n\t\t\t\t\t\t\tmaterials.delete( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\t// once the list of compiling materials is empty, call the callback\n\n\t\t\t\t\tif ( materials.size === 0 ) {\n\n\t\t\t\t\t\tresolve( scene );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if some materials are still not ready, wait a bit and check again\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extensions.get( 'KHR_parallel_shader_compile' ) !== null ) {\n\n\t\t\t\t\t// If we can check the compilation status of the materials without\n\t\t\t\t\t// blocking then do so right away.\n\n\t\t\t\t\tcheckMaterialsReady();\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise start by waiting a bit to give the materials we just\n\t\t\t\t\t// initialized a chance to finish.\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\n\t\t\t//\n\n\t\t\tbackground.render( currentRenderList, scene );\n\n\t\t\t// render scene\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector3\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tif ( overrideMaterial !== null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: ( isWebGL2 ) ? 4 : 0\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t\t} else {\n\n\t\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\t_this.clear();\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = renderItem.material;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = null;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction getUniformList( materialProperties ) {\n\n\t\t\tif ( materialProperties.uniformsList === null ) {\n\n\t\t\t\tconst progUniforms = materialProperties.currentProgram.getUniforms();\n\t\t\t\tmaterialProperties.uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, materialProperties.uniforms );\n\n\t\t\t}\n\n\t\t\treturn materialProperties.uniformsList;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.batching = parameters.batching;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\n\t\t\tlet toneMapping = NoToneMapping;\n\n\t\t\tif ( material.toneMapped ) {\n\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\t\ttoneMapping = _this.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batching === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isBatchedMesh && materialProperties.batching === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\t// common camera uniforms\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// consider moving isOrthographic to UniformLib and WebGLMaterials, see https://github.com/mrdoob/three.js/pull/26467#issuecomment-1645185067\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingTexture', object._matricesTexture, textures );\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, position.x, position.y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tconst width = srcTexture.image.width;\n\t\t\tconst height = srcTexture.image.height;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture || dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst unpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst unpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst unpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst unpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst unpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ level ] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, sourceBox.min.x );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, sourceBox.min.y );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, sourceBox.min.z );\n\n\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, unpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, unpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, unpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, unpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget outputColorSpace() {\n\n\t\treturn this._outputColorSpace;\n\n\t}\n\n\tset outputColorSpace( colorSpace ) {\n\n\t\tthis._outputColorSpace = colorSpace;\n\n\t\tconst gl = this.getContext();\n\t\tgl.drawingBufferColorSpace = colorSpace === DisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\t\tgl.unpackColorSpace = ColorManagement.workingColorSpace === LinearDisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\n\t}\n\n\tget outputEncoding() { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\treturn this.outputColorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset outputEncoding( encoding ) { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\tthis.outputColorSpace = encoding === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n\n\t}\n\n\tget useLegacyLights() { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\treturn this._useLegacyLights;\n\n\t}\n\n\tset useLegacyLights( value ) { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\tthis._useLegacyLights = value;\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\tconsole.warn( 'THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material = new SpriteMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material;\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = AttachedBindMode;\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$4.copy( this.boundingSphere );\n\t\t_sphere$4.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$4 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === AttachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n\tboneTransform( index, vector ) { // @deprecated, r151\n\n\t\tconsole.warn( 'THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151.' );\n\t\treturn this.applyBoneTransform( index, vector );\n\n\t}\n\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix$1 = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix$1;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh$1 = /*@__PURE__*/ new Mesh();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$3 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh$1.geometry = this.geometry;\n\t\t_mesh$1.material = this.material;\n\n\t\tif ( _mesh$1.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$3.copy( this.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh$1.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh$1.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nfunction sortOpaque( a, b ) {\n\n\treturn a.z - b.z;\n\n}\n\nfunction sortTransparent( a, b ) {\n\n\treturn b.z - a.z;\n\n}\n\nclass MultiDrawRenderList {\n\n\tconstructor() {\n\n\t\tthis.index = 0;\n\t\tthis.pool = [];\n\t\tthis.list = [];\n\n\t}\n\n\tpush( drawRange, z ) {\n\n\t\tconst pool = this.pool;\n\t\tconst list = this.list;\n\t\tif ( this.index >= pool.length ) {\n\n\t\t\tpool.push( {\n\n\t\t\t\tstart: - 1,\n\t\t\t\tcount: - 1,\n\t\t\t\tz: - 1,\n\n\t\t\t} );\n\n\t\t}\n\n\t\tconst item = pool[ this.index ];\n\t\tlist.push( item );\n\t\tthis.index ++;\n\n\t\titem.start = drawRange.start;\n\t\titem.count = drawRange.count;\n\t\titem.z = z;\n\n\t}\n\n\treset() {\n\n\t\tthis.list.length = 0;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nconst ID_ATTR_NAME = 'batchId';\nconst _matrix = /*@__PURE__*/ new Matrix4();\nconst _invMatrixWorld = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\nconst _projScreenMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _frustum = /*@__PURE__*/ new Frustum();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _renderList = /*@__PURE__*/ new MultiDrawRenderList();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _batchIntersects = [];\n\n// @TODO: SkinnedMesh support?\n// @TODO: geometry.groups support?\n// @TODO: geometry.drawRange support?\n// @TODO: geometry.morphAttributes support?\n// @TODO: Support uniform parameter per geometry\n// @TODO: Add an \"optimize\" function to pack geometry and remove data gaps\n\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\nfunction copyAttributeData( src, target, targetOffset = 0 ) {\n\n\tconst itemSize = target.itemSize;\n\tif ( src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor ) {\n\n\t\t// use the component getters and setters if the array data cannot\n\t\t// be copied directly\n\t\tconst vertexCount = src.count;\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\ttarget.setComponent( i + targetOffset, c, src.getComponent( i, c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// faster copy approach using typed array set function\n\t\ttarget.array.set( src.array, targetOffset * itemSize );\n\n\t}\n\n\ttarget.needsUpdate = true;\n\n}\n\nclass BatchedMesh extends Mesh {\n\n\tget maxGeometryCount() {\n\n\t\treturn this._maxGeometryCount;\n\n\t}\n\n\tconstructor( maxGeometryCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material ) {\n\n\t\tsuper( new BufferGeometry(), material );\n\n\t\tthis.isBatchedMesh = true;\n\t\tthis.perObjectFrustumCulled = true;\n\t\tthis.sortObjects = true;\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\t\tthis.customSort = null;\n\n\t\tthis._drawRanges = [];\n\t\tthis._reservedRanges = [];\n\n\t\tthis._visibility = [];\n\t\tthis._active = [];\n\t\tthis._bounds = [];\n\n\t\tthis._maxGeometryCount = maxGeometryCount;\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\tthis._geometryInitialized = false;\n\t\tthis._geometryCount = 0;\n\t\tthis._multiDrawCounts = new Int32Array( maxGeometryCount );\n\t\tthis._multiDrawStarts = new Int32Array( maxGeometryCount );\n\t\tthis._multiDrawCount = 0;\n\t\tthis._visibilityChanged = true;\n\n\t\t// Local matrix per geometry by using data texture\n\t\tthis._matricesTexture = null;\n\n\t\tthis._initMatricesTexture();\n\n\t}\n\n\t_initMatricesTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this._maxGeometryCount * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst matricesArray = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tconst matricesTexture = new DataTexture( matricesArray, size, size, RGBAFormat, FloatType );\n\n\t\tthis._matricesTexture = matricesTexture;\n\n\t}\n\n\t_initializeGeometry( reference ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst maxVertexCount = this._maxVertexCount;\n\t\tconst maxGeometryCount = this._maxGeometryCount;\n\t\tconst maxIndexCount = this._maxIndexCount;\n\t\tif ( this._geometryInitialized === false ) {\n\n\t\t\tfor ( const attributeName in reference.attributes ) {\n\n\t\t\t\tconst srcAttribute = reference.getAttribute( attributeName );\n\t\t\t\tconst { array, itemSize, normalized } = srcAttribute;\n\n\t\t\t\tconst dstArray = new array.constructor( maxVertexCount * itemSize );\n\t\t\t\tconst dstAttribute = new srcAttribute.constructor( dstArray, itemSize, normalized );\n\t\t\t\tdstAttribute.setUsage( srcAttribute.usage );\n\n\t\t\t\tgeometry.setAttribute( attributeName, dstAttribute );\n\n\t\t\t}\n\n\t\t\tif ( reference.getIndex() !== null ) {\n\n\t\t\t\tconst indexArray = maxVertexCount > 65536\n\t\t\t\t\t? new Uint32Array( maxIndexCount )\n\t\t\t\t\t: new Uint16Array( maxIndexCount );\n\n\t\t\t\tgeometry.setIndex( new BufferAttribute( indexArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tconst idArray = maxGeometryCount > 65536\n\t\t\t\t? new Uint32Array( maxVertexCount )\n\t\t\t\t: new Uint16Array( maxVertexCount );\n\t\t\tgeometry.setAttribute( ID_ATTR_NAME, new BufferAttribute( idArray, 1 ) );\n\n\t\t\tthis._geometryInitialized = true;\n\n\t\t}\n\n\t}\n\n\t// Make sure the geometry is compatible with the existing combined geometry atributes\n\t_validateGeometry( geometry ) {\n\n\t\t// check that the geometry doesn't have a version of our reserved id attribute\n\t\tif ( geometry.getAttribute( ID_ATTR_NAME ) ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Geometry cannot use attribute \"${ ID_ATTR_NAME }\"` );\n\n\t\t}\n\n\t\t// check to ensure the geometries are using consistent attributes and indices\n\t\tconst batchGeometry = this.geometry;\n\t\tif ( Boolean( geometry.getIndex() ) !== Boolean( batchGeometry.getIndex() ) ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: All geometries must consistently have \"index\".' );\n\n\t\t}\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( ! geometry.hasAttribute( attributeName ) ) {\n\n\t\t\t\tthrow new Error( `BatchedMesh: Added geometry missing \"${ attributeName }\". All geometries must have consistent attributes.` );\n\n\t\t\t}\n\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tif ( srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized ) {\n\n\t\t\t\tthrow new Error( 'BatchedMesh: All attributes must have a consistent itemSize and normalized value.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tsetCustomSort( func ) {\n\n\t\tthis.customSort = func;\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingBox = this.boundingBox;\n\t\tconst active = this._active;\n\n\t\tboundingBox.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( active[ i ] === false ) continue;\n\n\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\tthis.getBoundingBoxAt( i, _box$1 ).applyMatrix4( _matrix );\n\t\t\tboundingBox.union( _box$1 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingSphere = this.boundingSphere;\n\t\tconst active = this._active;\n\n\t\tboundingSphere.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( active[ i ] === false ) continue;\n\n\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix );\n\t\t\tboundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\taddGeometry( geometry, vertexCount = - 1, indexCount = - 1 ) {\n\n\t\tthis._initializeGeometry( geometry );\n\n\t\tthis._validateGeometry( geometry );\n\n\t\t// ensure we're not over geometry\n\t\tif ( this._geometryCount >= this._maxGeometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\t// get the necessary range fo the geometry\n\t\tconst reservedRange = {\n\t\t\tvertexStart: - 1,\n\t\t\tvertexCount: - 1,\n\t\t\tindexStart: - 1,\n\t\t\tindexCount: - 1,\n\t\t};\n\n\t\tlet lastRange = null;\n\t\tconst reservedRanges = this._reservedRanges;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst bounds = this._bounds;\n\t\tif ( this._geometryCount !== 0 ) {\n\n\t\t\tlastRange = reservedRanges[ reservedRanges.length - 1 ];\n\n\t\t}\n\n\t\tif ( vertexCount === - 1 ) {\n\n\t\t\treservedRange.vertexCount = geometry.getAttribute( 'position' ).count;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexCount = vertexCount;\n\n\t\t}\n\n\t\tif ( lastRange === null ) {\n\n\t\t\treservedRange.vertexStart = 0;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexStart = lastRange.vertexStart + lastRange.vertexCount;\n\n\t\t}\n\n\t\tconst index = geometry.getIndex();\n\t\tconst hasIndex = index !== null;\n\t\tif ( hasIndex ) {\n\n\t\t\tif ( indexCount\t=== - 1 ) {\n\n\t\t\t\treservedRange.indexCount = index.count;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexCount = indexCount;\n\n\t\t\t}\n\n\t\t\tif ( lastRange === null ) {\n\n\t\t\t\treservedRange.indexStart = 0;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexStart = lastRange.indexStart + lastRange.indexCount;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (\n\t\t\treservedRange.indexStart !== - 1 &&\n\t\t\treservedRange.indexStart + reservedRange.indexCount > this._maxIndexCount ||\n\t\t\treservedRange.vertexStart + reservedRange.vertexCount > this._maxVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space request exceeds the maximum buffer size.' );\n\n\t\t}\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\n\t\t// push new visibility states\n\t\tvisibility.push( true );\n\t\tactive.push( true );\n\n\t\t// update id\n\t\tconst geometryId = this._geometryCount;\n\t\tthis._geometryCount ++;\n\n\t\t// initialize matrix information\n\t\t_identityMatrix.toArray( matricesArray, geometryId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\t// add the reserved range and draw range objects\n\t\treservedRanges.push( reservedRange );\n\t\tdrawRanges.push( {\n\t\t\tstart: hasIndex ? reservedRange.indexStart : reservedRange.vertexStart,\n\t\t\tcount: - 1\n\t\t} );\n\t\tbounds.push( {\n\t\t\tboxInitialized: false,\n\t\t\tbox: new Box3(),\n\n\t\t\tsphereInitialized: false,\n\t\t\tsphere: new Sphere()\n\t\t} );\n\n\t\t// set the id for the geometry\n\t\tconst idAttribute = this.geometry.getAttribute( ID_ATTR_NAME );\n\t\tfor ( let i = 0; i < reservedRange.vertexCount; i ++ ) {\n\n\t\t\tidAttribute.setX( reservedRange.vertexStart + i, geometryId );\n\n\t\t}\n\n\t\tidAttribute.needsUpdate = true;\n\n\t\t// update the geometry\n\t\tthis.setGeometryAt( geometryId, geometry );\n\n\t\treturn geometryId;\n\n\t}\n\n\tsetGeometryAt( id, geometry ) {\n\n\t\tif ( id >= this._geometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst batchGeometry = this.geometry;\n\t\tconst hasIndex = batchGeometry.getIndex() !== null;\n\t\tconst dstIndex = batchGeometry.getIndex();\n\t\tconst srcIndex = geometry.getIndex();\n\t\tconst reservedRange = this._reservedRanges[ id ];\n\t\tif (\n\t\t\thasIndex &&\n\t\t\tsrcIndex.count > reservedRange.indexCount ||\n\t\t\tgeometry.attributes.position.count > reservedRange.vertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space not large enough for provided geometry.' );\n\n\t\t}\n\n\t\t// copy geometry over\n\t\tconst vertexStart = reservedRange.vertexStart;\n\t\tconst vertexCount = reservedRange.vertexCount;\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// copy attribute data\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tcopyAttributeData( srcAttribute, dstAttribute, vertexStart );\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tconst itemSize = srcAttribute.itemSize;\n\t\t\tfor ( let i = srcAttribute.count, l = vertexCount; i < l; i ++ ) {\n\n\t\t\t\tconst index = vertexStart + i;\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tdstAttribute.setComponent( index, c, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdstAttribute.needsUpdate = true;\n\n\t\t}\n\n\t\t// copy index\n\t\tif ( hasIndex ) {\n\n\t\t\tconst indexStart = reservedRange.indexStart;\n\n\t\t\t// copy index data over\n\t\t\tfor ( let i = 0; i < srcIndex.count; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart + srcIndex.getX( i ) );\n\n\t\t\t}\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tfor ( let i = srcIndex.count, l = reservedRange.indexCount; i < l; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart );\n\n\t\t\t}\n\n\t\t\tdstIndex.needsUpdate = true;\n\n\t\t}\n\n\t\t// store the bounding boxes\n\t\tconst bound = this._bounds[ id ];\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tbound.box.copy( geometry.boundingBox );\n\t\t\tbound.boxInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.boxInitialized = false;\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tbound.sphere.copy( geometry.boundingSphere );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.sphereInitialized = false;\n\n\t\t}\n\n\t\t// set drawRange count\n\t\tconst drawRange = this._drawRanges[ id ];\n\t\tconst posAttr = geometry.getAttribute( 'position' );\n\t\tdrawRange.count = hasIndex ? srcIndex.count : posAttr.count;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn id;\n\n\t}\n\n\tdeleteGeometry( geometryId ) {\n\n\t\t// Note: User needs to call optimize() afterward to pack the data.\n\n\t\tconst active = this._active;\n\t\tif ( geometryId >= active.length || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tactive[ geometryId ] = false;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\t// get bounding box and compute it if it doesn't exist\n\tgetBoundingBoxAt( id, target ) {\n\n\t\tconst active = this._active;\n\t\tif ( active[ id ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// compute bounding box\n\t\tconst bound = this._bounds[ id ];\n\t\tconst box = bound.box;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.boxInitialized === false ) {\n\n\t\t\tbox.makeEmpty();\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ id ];\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\tbox.expandByPoint( _vector$5.fromBufferAttribute( position, iv ) );\n\n\t\t\t}\n\n\t\t\tbound.boxInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( box );\n\t\treturn target;\n\n\t}\n\n\t// get bounding sphere and compute it if it doesn't exist\n\tgetBoundingSphereAt( id, target ) {\n\n\t\tconst active = this._active;\n\t\tif ( active[ id ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// compute bounding sphere\n\t\tconst bound = this._bounds[ id ];\n\t\tconst sphere = bound.sphere;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.sphereInitialized === false ) {\n\n\t\t\tsphere.makeEmpty();\n\n\t\t\tthis.getBoundingBoxAt( id, _box$1 );\n\t\t\t_box$1.getCenter( sphere.center );\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ id ];\n\n\t\t\tlet maxRadiusSq = 0;\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\t_vector$5.fromBufferAttribute( position, iv );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, sphere.center.distanceToSquared( _vector$5 ) );\n\n\t\t\t}\n\n\t\t\tsphere.radius = Math.sqrt( maxRadiusSq );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( sphere );\n\t\treturn target;\n\n\t}\n\n\tsetMatrixAt( geometryId, matrix ) {\n\n\t\t// @TODO: Map geometryId to index of the arrays because\n\t\t//        optimize() can make geometryId mismatch the index\n\n\t\tconst active = this._active;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmatrix.toArray( matricesArray, geometryId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetMatrixAt( geometryId, matrix ) {\n\n\t\tconst active = this._active;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn matrix.fromArray( matricesArray, geometryId * 16 );\n\n\t}\n\n\tsetVisibleAt( geometryId, value ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst geometryCount = this._geometryCount;\n\n\t\t// if the geometry is out of range, not active, or visibility state\n\t\t// does not change then return early\n\t\tif (\n\t\t\tgeometryId >= geometryCount ||\n\t\t\tactive[ geometryId ] === false ||\n\t\t\tvisibility[ geometryId ] === value\n\t\t) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvisibility[ geometryId ] = value;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetVisibleAt( geometryId ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst geometryCount = this._geometryCount;\n\n\t\t// return early if the geometry is out of range or not active\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn visibility[ geometryId ];\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst batchGeometry = this.geometry;\n\n\t\t// iterate over each geometry\n\t\t_mesh.material = this.material;\n\t\t_mesh.geometry.index = batchGeometry.index;\n\t\t_mesh.geometry.attributes = batchGeometry.attributes;\n\t\tif ( _mesh.geometry.boundingBox === null ) {\n\n\t\t\t_mesh.geometry.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\n\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( ! visibility[ i ] || ! active[ i ] ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst drawRange = drawRanges[ i ];\n\t\t\t_mesh.geometry.setDrawRange( drawRange.start, drawRange.count );\n\n\t\t\t// ge the intersects\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\n\t\t\tthis.getBoundingBoxAt( i, _mesh.geometry.boundingBox );\n\t\t\tthis.getBoundingSphereAt( i, _mesh.geometry.boundingSphere );\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\n\n\t\t\t// add batch id to the intersects\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\n\n\t\t\t\tconst intersect = _batchIntersects[ j ];\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersect.batchId = i;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_batchIntersects.length = 0;\n\n\t\t}\n\n\t\t_mesh.material = null;\n\t\t_mesh.geometry.index = null;\n\t\t_mesh.geometry.attributes = {};\n\t\t_mesh.geometry.setDrawRange( 0, Infinity );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.geometry = source.geometry.clone();\n\t\tthis.perObjectFrustumCulled = source.perObjectFrustumCulled;\n\t\tthis.sortObjects = source.sortObjects;\n\t\tthis.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\n\t\tthis.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\n\n\t\tthis._drawRanges = source._drawRanges.map( range => ( { ...range } ) );\n\t\tthis._reservedRanges = source._reservedRanges.map( range => ( { ...range } ) );\n\n\t\tthis._visibility = source._visibility.slice();\n\t\tthis._active = source._active.slice();\n\t\tthis._bounds = source._bounds.map( bound => ( {\n\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\tbox: bound.box.clone(),\n\n\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\tsphere: bound.sphere.clone()\n\t\t} ) );\n\n\t\tthis._maxGeometryCount = source._maxGeometryCount;\n\t\tthis._maxVertexCount = source._maxVertexCount;\n\t\tthis._maxIndexCount = source._maxIndexCount;\n\n\t\tthis._geometryInitialized = source._geometryInitialized;\n\t\tthis._geometryCount = source._geometryCount;\n\t\tthis._multiDrawCounts = source._multiDrawCounts.slice();\n\t\tthis._multiDrawStarts = source._multiDrawStarts.slice();\n\n\t\tthis._matricesTexture = source._matricesTexture.clone();\n\t\tthis._matricesTexture.image.data = this._matricesTexture.image.slice();\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\t// Assuming the geometry is not shared with other meshes\n\t\tthis.geometry.dispose();\n\n\t\tthis._matricesTexture.dispose();\n\t\tthis._matricesTexture = null;\n\t\treturn this;\n\n\t}\n\n\tonBeforeRender( renderer, scene, camera, geometry, material/*, _group*/ ) {\n\n\t\t// if visibility has not changed and frustum culling and object sorting is not required\n\t\t// then skip iterating over all items\n\t\tif ( ! this._visibilityChanged && ! this.perObjectFrustumCulled && ! this.sortObjects ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// the indexed version of the multi draw function requires specifying the start\n\t\t// offset in bytes.\n\t\tconst index = geometry.getIndex();\n\t\tconst bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\n\n\t\tconst visibility = this._visibility;\n\t\tconst multiDrawStarts = this._multiDrawStarts;\n\t\tconst multiDrawCounts = this._multiDrawCounts;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst perObjectFrustumCulled = this.perObjectFrustumCulled;\n\n\t\t// prepare the frustum in the local frame\n\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t_projScreenMatrix$2\n\t\t\t\t.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse )\n\t\t\t\t.multiply( this.matrixWorld );\n\t\t\t_frustum.setFromProjectionMatrix(\n\t\t\t\t_projScreenMatrix$2,\n\t\t\t\trenderer.isWebGPURenderer ? WebGPUCoordinateSystem : WebGLCoordinateSystem\n\t\t\t);\n\n\t\t}\n\n\t\tlet count = 0;\n\t\tif ( this.sortObjects ) {\n\n\t\t\t// get the camera position in the local frame\n\t\t\t_invMatrixWorld.copy( this.matrixWorld ).invert();\n\t\t\t_vector$5.setFromMatrixPosition( camera.matrixWorld ).applyMatrix4( _invMatrixWorld );\n\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\n\n\t\t\t\tif ( visibility[ i ] ) {\n\n\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix );\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\t// get the distance from camera used for sorting\n\t\t\t\t\t\tconst z = _vector$5.distanceTo( _sphere$2.center );\n\t\t\t\t\t\t_renderList.push( drawRanges[ i ], z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Sort the draw ranges and prep for rendering\n\t\t\tconst list = _renderList.list;\n\t\t\tconst customSort = this.customSort;\n\t\t\tif ( customSort === null ) {\n\n\t\t\t\tlist.sort( material.transparent ? sortTransparent : sortOpaque );\n\n\t\t\t} else {\n\n\t\t\t\tcustomSort.call( this, list, camera );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = list.length; i < l; i ++ ) {\n\n\t\t\t\tconst item = list[ i ];\n\t\t\t\tmultiDrawStarts[ count ] = item.start * bytesPerElement;\n\t\t\t\tmultiDrawCounts[ count ] = item.count;\n\t\t\t\tcount ++;\n\n\t\t\t}\n\n\t\t\t_renderList.reset();\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\n\n\t\t\t\tif ( visibility[ i ] ) {\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix );\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\tconst range = drawRanges[ i ];\n\t\t\t\t\t\tmultiDrawStarts[ count ] = range.start * bytesPerElement;\n\t\t\t\t\t\tmultiDrawCounts[ count ] = range.count;\n\t\t\t\t\t\tcount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._multiDrawCount = count;\n\t\tthis._visibilityChanged = false;\n\n\t}\n\n\tonBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial/* , group */ ) {\n\n\t\tthis.onBeforeRender( renderer, null, shadowCamera, geometry, depthMaterial );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = times.slice( from, to );\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = this.times.slice(),\n\t\t\tvalues = this.values.slice(),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = times.slice( 0, writeIndex );\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = this.times.slice();\n\t\tconst values = this.values.slice();\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' ) || response.headers.get( 'X-File-Size' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t} else if ( texData.encoding !== undefined ) { // @deprecated, r152\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding; // @deprecated, r152\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'BatchedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new BatchedMesh( data.maxGeometryCount, data.maxVertexCount, data.maxIndexCount, material );\n\t\t\t\tobject.geometry = geometry;\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\n\t\t\t\tobject.sortObjects = data.sortObjects;\n\n\t\t\t\tobject._drawRanges = data.drawRanges;\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\n\n\t\t\t\tobject._visibility = data.visibility;\n\t\t\t\tobject._active = data.active;\n\t\t\t\tobject._bounds = data.bounds.map( bound => {\n\n\t\t\t\t\tconst box = new Box3();\n\t\t\t\t\tbox.min.fromArray( bound.boxMin );\n\t\t\t\t\tbox.max.fromArray( bound.boxMax );\n\n\t\t\t\t\tconst sphere = new Sphere();\n\t\t\t\t\tsphere.radius = bound.sphereRadius;\n\t\t\t\t\tsphere.center.fromArray( bound.sphereCenter );\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\t\t\tbox: box,\n\n\t\t\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\t\t\tsphere: sphere\n\t\t\t\t\t};\n\n\t\t\t\t} );\n\n\t\t\t\tobject._maxGeometryCount = data.maxGeometryCount;\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\n\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\n\t\t\t\tobject._geometryCount = data.geometryCount;\n\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\t// If cached is a promise, wait for it to resolve\n\t\t\tif ( cached.then ) {\n\n\t\t\t\tcached.then( imageBitmap => {\n\n\t\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} ).catch( e => {\n\n\t\t\t\t\tif ( onError ) onError( e );\n\n\t\t\t\t} );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// If cached is not a promise (i.e., it's already an imageBitmap)\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tconst promise = fetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t\treturn imageBitmap;\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tCache.remove( url );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tCache.add( url, promise );\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} ).catch( handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tconst uniforms = Array.isArray( uniformsSource[ i ] ) ? uniformsSource[ i ] : [ uniformsSource[ i ] ];\n\n\t\t\tfor ( let j = 0; j < uniforms.length; j ++ ) {\n\n\t\t\t\tthis.uniforms.push( uniforms[ j ].clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearDisplayP3ColorSpace, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, P3Primaries, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, Rec709Primaries, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, TwoPassDoubleSide, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, createCanvasElement, sRGBEncoding };\n","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3,\n\tPlane,\n\tRay,\n\tMathUtils\n} from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// Sets the 3D cursor (similar to Blender), from which the maxTargetRadius takes effect\n\t\tthis.cursor = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// Limit camera target within a spherical area around the cursor\n\t\tthis.minTargetRadius = 0;\n\t\tthis.maxTargetRadius = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\t\tthis.zoomToCursor = false;\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.stopListenToKeyEvents = function () {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\t\t\tconst lastTargetPosition = new Vector3();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update( deltaTime = null ) {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle( deltaTime ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\t// Limit the target distance from the cursor to create a sphere around the center of interest\n\t\t\t\tscope.target.sub( scope.cursor );\n\t\t\t\tscope.target.clampLength( scope.minTargetRadius, scope.maxTargetRadius );\n\t\t\t\tscope.target.add( scope.cursor );\n\n\t\t\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n\t\t\t\t// we adjust zoom later in these cases\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom || scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius * scale );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t// adjust camera position\n\t\t\t\tlet zoomChanged = false;\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom ) {\n\n\t\t\t\t\tlet newRadius = null;\n\t\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t\t// move the camera down the pointer ray\n\t\t\t\t\t\t// this method avoids floating point error\n\t\t\t\t\t\tconst prevRadius = offset.length();\n\t\t\t\t\t\tnewRadius = clampDistance( prevRadius * scale );\n\n\t\t\t\t\t\tconst radiusDelta = prevRadius - newRadius;\n\t\t\t\t\t\tscope.object.position.addScaledVector( dollyDirection, radiusDelta );\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\n\n\t\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t\t// adjust the ortho camera position based on zoom changes\n\t\t\t\t\t\tconst mouseBefore = new Vector3( mouse.x, mouse.y, 0 );\n\t\t\t\t\t\tmouseBefore.unproject( scope.object );\n\n\t\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\n\t\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\t\tzoomChanged = true;\n\n\t\t\t\t\t\tconst mouseAfter = new Vector3( mouse.x, mouse.y, 0 );\n\t\t\t\t\t\tmouseAfter.unproject( scope.object );\n\n\t\t\t\t\t\tscope.object.position.sub( mouseAfter ).add( mouseBefore );\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\n\n\t\t\t\t\t\tnewRadius = offset.length();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\n\t\t\t\t\t\tscope.zoomToCursor = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// handle the placement of the target\n\t\t\t\t\tif ( newRadius !== null ) {\n\n\t\t\t\t\t\tif ( this.screenSpacePanning ) {\n\n\t\t\t\t\t\t\t// position the orbit target in front of the new camera position\n\t\t\t\t\t\t\tscope.target.set( 0, 0, - 1 )\n\t\t\t\t\t\t\t\t.transformDirection( scope.object.matrix )\n\t\t\t\t\t\t\t\t.multiplyScalar( newRadius )\n\t\t\t\t\t\t\t\t.add( scope.object.position );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// get the ray and translation plane to compute target\n\t\t\t\t\t\t\t_ray.origin.copy( scope.object.position );\n\t\t\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( scope.object.matrix );\n\n\t\t\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n\t\t\t\t\t\t\t// extremely large values\n\t\t\t\t\t\t\tif ( Math.abs( scope.object.up.dot( _ray.direction ) ) < TILT_LIMIT ) {\n\n\t\t\t\t\t\t\t\tobject.lookAt( scope.target );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( scope.object.up, scope.target );\n\t\t\t\t\t\t\t\t_ray.intersectPlane( _plane, scope.target );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\n\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\tzoomChanged = true;\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\t\t\t\tperformCursorZoom = false;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ||\n\t\t\t\t\tlastTargetPosition.distanceToSquared( scope.target ) > 0 ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tlastTargetPosition.copy( scope.target );\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerUp );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\t\tscope._domElementKeyEvents = null;\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst dollyDirection = new Vector3();\n\t\tconst mouse = new Vector2();\n\t\tlet performCursorZoom = false;\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle( deltaTime ) {\n\n\t\t\tif ( deltaTime !== null ) {\n\n\t\t\t\treturn ( 2 * Math.PI / 60 * scope.autoRotateSpeed ) * deltaTime;\n\n\t\t\t} else {\n\n\t\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getZoomScale( delta ) {\n\n\t\t\tconst normalized_delta = Math.abs( delta ) / ( 100 * ( window.devicePixelRatio | 0 ) );\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed * normalized_delta );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateZoomParameters( x, y ) {\n\n\t\t\tif ( ! scope.zoomToCursor ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tperformCursorZoom = true;\n\n\t\t\tconst rect = scope.domElement.getBoundingClientRect();\n\t\t\tconst dx = x - rect.left;\n\t\t\tconst dy = y - rect.top;\n\t\t\tconst w = rect.width;\n\t\t\tconst h = rect.height;\n\n\t\t\tmouse.x = ( dx / w ) * 2 - 1;\n\t\t\tmouse.y = - ( dy / h ) * 2 + 1;\n\n\t\t\tdollyDirection.set( mouse.x, mouse.y, 1 ).unproject( scope.object ).sub( scope.object.position ).normalize();\n\n\t\t}\n\n\t\tfunction clampDistance( dist ) {\n\n\t\t\treturn Math.max( scope.minDistance, Math.min( scope.maxDistance, dist ) );\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tupdateZoomParameters( event.clientX, event.clientX );\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale( dollyDelta.y ) );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale( dollyDelta.y ) );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tupdateZoomParameters( event.clientX, event.clientY );\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale( event.deltaY ) );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale( event.deltaY ) );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan( event );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tconst centerX = ( event.pageX + position.x ) * 0.5;\n\t\t\tconst centerY = ( event.pageY + position.y ) * 0.5;\n\n\t\t\tupdateZoomParameters( centerX, centerY );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event.pointerId );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ] == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointerId = ( event.pointerId === pointers[ 0 ] ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerUp );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\nexport { OrbitControls };\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nexport default function(color, forceCSSHex) {\n  const colorFormat = color.__state.conversionName.toString();\n\n  const r = Math.round(color.r);\n  const g = Math.round(color.g);\n  const b = Math.round(color.b);\n  const a = color.a;\n  const h = Math.round(color.h);\n  const s = color.s.toFixed(1);\n  const v = color.v.toFixed(1);\n\n  if (forceCSSHex || (colorFormat === 'THREE_CHAR_HEX') || (colorFormat === 'SIX_CHAR_HEX')) {\n    let str = color.hex.toString(16);\n    while (str.length < 6) {\n      str = '0' + str;\n    }\n    return '#' + str;\n  } else if (colorFormat === 'CSS_RGB') {\n    return 'rgb(' + r + ',' + g + ',' + b + ')';\n  } else if (colorFormat === 'CSS_RGBA') {\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n  } else if (colorFormat === 'HEX') {\n    return '0x' + color.hex.toString(16);\n  } else if (colorFormat === 'RGB_ARRAY') {\n    return '[' + r + ',' + g + ',' + b + ']';\n  } else if (colorFormat === 'RGBA_ARRAY') {\n    return '[' + r + ',' + g + ',' + b + ',' + a + ']';\n  } else if (colorFormat === 'RGB_OBJ') {\n    return '{r:' + r + ',g:' + g + ',b:' + b + '}';\n  } else if (colorFormat === 'RGBA_OBJ') {\n    return '{r:' + r + ',g:' + g + ',b:' + b + ',a:' + a + '}';\n  } else if (colorFormat === 'HSV_OBJ') {\n    return '{h:' + h + ',s:' + s + ',v:' + v + '}';\n  } else if (colorFormat === 'HSVA_OBJ') {\n    return '{h:' + h + ',s:' + s + ',v:' + v + ',a:' + a + '}';\n  }\n\n  return 'unknown format';\n}\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nconst ARR_EACH = Array.prototype.forEach;\nconst ARR_SLICE = Array.prototype.slice;\n\n/**\n * Band-aid methods for things that should be a lot easier in JavaScript.\n * Implementation and structure inspired by underscore.js\n * http://documentcloud.github.com/underscore/\n */\n\nconst Common = {\n  BREAK: {},\n\n  extend: function(target) {\n    this.each(ARR_SLICE.call(arguments, 1), function(obj) {\n      const keys = this.isObject(obj) ? Object.keys(obj) : [];\n      keys.forEach(function(key) {\n        if (!this.isUndefined(obj[key])) {\n          target[key] = obj[key];\n        }\n      }.bind(this));\n    }, this);\n\n    return target;\n  },\n\n  defaults: function(target) {\n    this.each(ARR_SLICE.call(arguments, 1), function(obj) {\n      const keys = this.isObject(obj) ? Object.keys(obj) : [];\n      keys.forEach(function(key) {\n        if (this.isUndefined(target[key])) {\n          target[key] = obj[key];\n        }\n      }.bind(this));\n    }, this);\n\n    return target;\n  },\n\n  compose: function() {\n    const toCall = ARR_SLICE.call(arguments);\n    return function() {\n      let args = ARR_SLICE.call(arguments);\n      for (let i = toCall.length - 1; i >= 0; i--) {\n        args = [toCall[i].apply(this, args)];\n      }\n      return args[0];\n    };\n  },\n\n  each: function(obj, itr, scope) {\n    if (!obj) {\n      return;\n    }\n\n    if (ARR_EACH && obj.forEach && obj.forEach === ARR_EACH) {\n      obj.forEach(itr, scope);\n    } else if (obj.length === obj.length + 0) { // Is number but not NaN\n      let key;\n      let l;\n      for (key = 0, l = obj.length; key < l; key++) {\n        if (key in obj && itr.call(scope, obj[key], key) === this.BREAK) {\n          return;\n        }\n      }\n    } else {\n      for (const key in obj) {\n        if (itr.call(scope, obj[key], key) === this.BREAK) {\n          return;\n        }\n      }\n    }\n  },\n\n  defer: function(fnc) {\n    setTimeout(fnc, 0);\n  },\n\n  // if the function is called repeatedly, wait until threshold passes until we execute the function\n  debounce: function(func, threshold, callImmediately) {\n    let timeout;\n\n    return function() {\n      const obj = this;\n      const args = arguments;\n      function delayed() {\n        timeout = null;\n        if (!callImmediately) func.apply(obj, args);\n      }\n\n      const callNow = callImmediately || !timeout;\n\n      clearTimeout(timeout);\n      timeout = setTimeout(delayed, threshold);\n\n      if (callNow) {\n        func.apply(obj, args);\n      }\n    };\n  },\n\n  toArray: function(obj) {\n    if (obj.toArray) return obj.toArray();\n    return ARR_SLICE.call(obj);\n  },\n\n  isUndefined: function(obj) {\n    return obj === undefined;\n  },\n\n  isNull: function(obj) {\n    return obj === null;\n  },\n\n  isNaN: function(obj) {\n    return isNaN(obj);\n  },\n\n  isArray: Array.isArray || function(obj) {\n    return obj.constructor === Array;\n  },\n\n  isObject: function(obj) {\n    return obj === Object(obj);\n  },\n\n  isNumber: function(obj) {\n    return obj === obj + 0;\n  },\n\n  isString: function(obj) {\n    return obj === obj + '';\n  },\n\n  isBoolean: function(obj) {\n    return obj === false || obj === true;\n  },\n\n  isFunction: function(obj) {\n    return obj instanceof Function;\n  }\n\n};\n\nexport default Common;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport toString from './toString';\nimport common from '../utils/common';\n\nconst INTERPRETATIONS = [\n  // Strings\n  {\n    litmus: common.isString,\n    conversions: {\n      THREE_CHAR_HEX: {\n        read: function(original) {\n          const test = original.match(/^#([A-F0-9])([A-F0-9])([A-F0-9])$/i);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'HEX',\n            hex: parseInt(\n              '0x' +\n              test[1].toString() + test[1].toString() +\n              test[2].toString() + test[2].toString() +\n              test[3].toString() + test[3].toString(), 0\n            )\n          };\n        },\n\n        write: toString\n      },\n\n      SIX_CHAR_HEX: {\n        read: function(original) {\n          const test = original.match(/^#([A-F0-9]{6})$/i);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'HEX',\n            hex: parseInt('0x' + test[1].toString(), 0)\n          };\n        },\n\n        write: toString\n      },\n\n      CSS_RGB: {\n        read: function(original) {\n          const test = original.match(/^rgb\\(\\s*(\\S+)\\s*,\\s*(\\S+)\\s*,\\s*(\\S+)\\s*\\)/);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: parseFloat(test[1]),\n            g: parseFloat(test[2]),\n            b: parseFloat(test[3])\n          };\n        },\n\n        write: toString\n      },\n\n      CSS_RGBA: {\n        read: function(original) {\n          const test = original.match(/^rgba\\(\\s*(\\S+)\\s*,\\s*(\\S+)\\s*,\\s*(\\S+)\\s*,\\s*(\\S+)\\s*\\)/);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: parseFloat(test[1]),\n            g: parseFloat(test[2]),\n            b: parseFloat(test[3]),\n            a: parseFloat(test[4])\n          };\n        },\n\n        write: toString\n      }\n    }\n  },\n\n  // Numbers\n  {\n    litmus: common.isNumber,\n\n    conversions: {\n\n      HEX: {\n        read: function(original) {\n          return {\n            space: 'HEX',\n            hex: original,\n            conversionName: 'HEX'\n          };\n        },\n\n        write: function(color) {\n          return color.hex;\n        }\n      }\n\n    }\n\n  },\n\n  // Arrays\n  {\n    litmus: common.isArray,\n    conversions: {\n      RGB_ARRAY: {\n        read: function(original) {\n          if (original.length !== 3) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: original[0],\n            g: original[1],\n            b: original[2]\n          };\n        },\n\n        write: function(color) {\n          return [color.r, color.g, color.b];\n        }\n      },\n\n      RGBA_ARRAY: {\n        read: function(original) {\n          if (original.length !== 4) return false;\n          return {\n            space: 'RGB',\n            r: original[0],\n            g: original[1],\n            b: original[2],\n            a: original[3]\n          };\n        },\n\n        write: function(color) {\n          return [color.r, color.g, color.b, color.a];\n        }\n      }\n    }\n  },\n\n  // Objects\n  {\n    litmus: common.isObject,\n    conversions: {\n\n      RGBA_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.r) &&\n            common.isNumber(original.g) &&\n            common.isNumber(original.b) &&\n            common.isNumber(original.a)) {\n            return {\n              space: 'RGB',\n              r: original.r,\n              g: original.g,\n              b: original.b,\n              a: original.a\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            r: color.r,\n            g: color.g,\n            b: color.b,\n            a: color.a\n          };\n        }\n      },\n\n      RGB_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.r) &&\n            common.isNumber(original.g) &&\n            common.isNumber(original.b)) {\n            return {\n              space: 'RGB',\n              r: original.r,\n              g: original.g,\n              b: original.b\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            r: color.r,\n            g: color.g,\n            b: color.b\n          };\n        }\n      },\n\n      HSVA_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.h) &&\n            common.isNumber(original.s) &&\n            common.isNumber(original.v) &&\n            common.isNumber(original.a)) {\n            return {\n              space: 'HSV',\n              h: original.h,\n              s: original.s,\n              v: original.v,\n              a: original.a\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            h: color.h,\n            s: color.s,\n            v: color.v,\n            a: color.a\n          };\n        }\n      },\n\n      HSV_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.h) &&\n            common.isNumber(original.s) &&\n            common.isNumber(original.v)) {\n            return {\n              space: 'HSV',\n              h: original.h,\n              s: original.s,\n              v: original.v\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            h: color.h,\n            s: color.s,\n            v: color.v\n          };\n        }\n      }\n    }\n  }\n];\n\nlet result;\nlet toReturn;\n\nconst interpret = function() {\n  toReturn = false;\n\n  const original = arguments.length > 1 ? common.toArray(arguments) : arguments[0];\n  common.each(INTERPRETATIONS, function(family) {\n    if (family.litmus(original)) {\n      common.each(family.conversions, function(conversion, conversionName) {\n        result = conversion.read(original);\n\n        if (toReturn === false && result !== false) {\n          toReturn = result;\n          result.conversionName = conversionName;\n          result.conversion = conversion;\n          return common.BREAK;\n        }\n      });\n\n      return common.BREAK;\n    }\n  });\n\n  return toReturn;\n};\n\nexport default interpret;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nlet tmpComponent;\n\nconst ColorMath = {\n  hsv_to_rgb: function(h, s, v) {\n    const hi = Math.floor(h / 60) % 6;\n\n    const f = h / 60 - Math.floor(h / 60);\n    const p = v * (1.0 - s);\n    const q = v * (1.0 - (f * s));\n    const t = v * (1.0 - ((1.0 - f) * s));\n\n    const c = [\n      [v, t, p],\n      [q, v, p],\n      [p, v, t],\n      [p, q, v],\n      [t, p, v],\n      [v, p, q]\n    ][hi];\n\n    return {\n      r: c[0] * 255,\n      g: c[1] * 255,\n      b: c[2] * 255\n    };\n  },\n\n  rgb_to_hsv: function(r, g, b) {\n    const min = Math.min(r, g, b);\n    const max = Math.max(r, g, b);\n    const delta = max - min;\n    let h;\n    let s;\n\n    if (max !== 0) {\n      s = delta / max;\n    } else {\n      return {\n        h: NaN,\n        s: 0,\n        v: 0\n      };\n    }\n\n    if (r === max) {\n      h = (g - b) / delta;\n    } else if (g === max) {\n      h = 2 + (b - r) / delta;\n    } else {\n      h = 4 + (r - g) / delta;\n    }\n    h /= 6;\n    if (h < 0) {\n      h += 1;\n    }\n\n    return {\n      h: h * 360,\n      s: s,\n      v: max / 255\n    };\n  },\n\n  rgb_to_hex: function(r, g, b) {\n    let hex = this.hex_with_component(0, 2, r);\n    hex = this.hex_with_component(hex, 1, g);\n    hex = this.hex_with_component(hex, 0, b);\n    return hex;\n  },\n\n  component_from_hex: function(hex, componentIndex) {\n    return (hex >> (componentIndex * 8)) & 0xFF;\n  },\n\n  hex_with_component: function(hex, componentIndex, value) {\n    return value << (tmpComponent = componentIndex * 8) | (hex & ~(0xFF << tmpComponent));\n  }\n};\n\nexport default ColorMath;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport interpret from './interpret';\nimport math from './math';\nimport colorToString from './toString';\nimport common from '../utils/common';\n\nclass Color {\n  constructor() {\n    this.__state = interpret.apply(this, arguments);\n\n    if (this.__state === false) {\n      throw new Error('Failed to interpret color arguments');\n    }\n\n    this.__state.a = this.__state.a || 1;\n  }\n\n  toString() {\n    return colorToString(this);\n  }\n\n  toHexString() {\n    return colorToString(this, true);\n  }\n\n  toOriginal() {\n    return this.__state.conversion.write(this);\n  }\n}\n\nfunction defineRGBComponent(target, component, componentHexIndex) {\n  Object.defineProperty(target, component, {\n    get: function() {\n      if (this.__state.space === 'RGB') {\n        return this.__state[component];\n      }\n\n      Color.recalculateRGB(this, component, componentHexIndex);\n\n      return this.__state[component];\n    },\n\n    set: function(v) {\n      if (this.__state.space !== 'RGB') {\n        Color.recalculateRGB(this, component, componentHexIndex);\n        this.__state.space = 'RGB';\n      }\n\n      this.__state[component] = v;\n    }\n  });\n}\n\nfunction defineHSVComponent(target, component) {\n  Object.defineProperty(target, component, {\n    get: function() {\n      if (this.__state.space === 'HSV') {\n        return this.__state[component];\n      }\n\n      Color.recalculateHSV(this);\n\n      return this.__state[component];\n    },\n\n    set: function(v) {\n      if (this.__state.space !== 'HSV') {\n        Color.recalculateHSV(this);\n        this.__state.space = 'HSV';\n      }\n\n      this.__state[component] = v;\n    }\n  });\n}\n\n\nColor.recalculateRGB = function(color, component, componentHexIndex) {\n  if (color.__state.space === 'HEX') {\n    color.__state[component] = math.component_from_hex(color.__state.hex, componentHexIndex);\n  } else if (color.__state.space === 'HSV') {\n    common.extend(color.__state, math.hsv_to_rgb(color.__state.h, color.__state.s, color.__state.v));\n  } else {\n    throw new Error('Corrupted color state');\n  }\n};\n\nColor.recalculateHSV = function(color) {\n  const result = math.rgb_to_hsv(color.r, color.g, color.b);\n\n  common.extend(color.__state,\n    {\n      s: result.s,\n      v: result.v\n    });\n\n  if (!common.isNaN(result.h)) {\n    color.__state.h = result.h;\n  } else if (common.isUndefined(color.__state.h)) {\n    color.__state.h = 0;\n  }\n};\n\nColor.COMPONENTS = ['r', 'g', 'b', 'h', 's', 'v', 'hex', 'a'];\n\ndefineRGBComponent(Color.prototype, 'r', 2);\ndefineRGBComponent(Color.prototype, 'g', 1);\ndefineRGBComponent(Color.prototype, 'b', 0);\n\ndefineHSVComponent(Color.prototype, 'h');\ndefineHSVComponent(Color.prototype, 's');\ndefineHSVComponent(Color.prototype, 'v');\n\nObject.defineProperty(Color.prototype, 'a', {\n  get: function() {\n    return this.__state.a;\n  },\n\n  set: function(v) {\n    this.__state.a = v;\n  }\n});\n\nObject.defineProperty(Color.prototype, 'hex', {\n  get: function() {\n    if (this.__state.space !== 'HEX') {\n      this.__state.hex = math.rgb_to_hex(this.r, this.g, this.b);\n      this.__state.space = 'HEX';\n    }\n\n    return this.__state.hex;\n  },\n\n  set: function(v) {\n    this.__state.space = 'HEX';\n    this.__state.hex = v;\n  }\n});\n\nexport default Color;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\n/**\n * @class An \"abstract\" class that represents a given property of an object.\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass Controller {\n  constructor(object, property) {\n    this.initialValue = object[property];\n\n    /**\n     * Those who extend this class will put their DOM elements in here.\n     * @type {DOMElement}\n     */\n    this.domElement = document.createElement('div');\n\n    /**\n     * The object to manipulate\n     * @type {Object}\n     */\n    this.object = object;\n\n    /**\n     * The name of the property to manipulate\n     * @type {String}\n     */\n    this.property = property;\n\n    /**\n     * The function to be called on change.\n     * @type {Function}\n     * @ignore\n     */\n    this.__onChange = undefined;\n\n    /**\n     * The function to be called on finishing change.\n     * @type {Function}\n     * @ignore\n     */\n    this.__onFinishChange = undefined;\n  }\n\n  /**\n   * Specify that a function fire every time someone changes the value with\n   * this Controller.\n   *\n   * @param {Function} fnc This function will be called whenever the value\n   * is modified via this Controller.\n   * @returns {Controller} this\n   */\n  onChange(fnc) {\n    this.__onChange = fnc;\n    return this;\n  }\n\n  /**\n   * Specify that a function fire every time someone \"finishes\" changing\n   * the value wih this Controller. Useful for values that change\n   * incrementally like numbers or strings.\n   *\n   * @param {Function} fnc This function will be called whenever\n   * someone \"finishes\" changing the value via this Controller.\n   * @returns {Controller} this\n   */\n  onFinishChange(fnc) {\n    this.__onFinishChange = fnc;\n    return this;\n  }\n\n  /**\n   * Change the value of <code>object[property]</code>\n   *\n   * @param {Object} newValue The new value of <code>object[property]</code>\n   */\n  setValue(newValue) {\n    this.object[this.property] = newValue;\n    if (this.__onChange) {\n      this.__onChange.call(this, newValue);\n    }\n\n    this.updateDisplay();\n    return this;\n  }\n\n  /**\n   * Gets the value of <code>object[property]</code>\n   *\n   * @returns {Object} The current value of <code>object[property]</code>\n   */\n  getValue() {\n    return this.object[this.property];\n  }\n\n  /**\n   * Refreshes the visual display of a Controller in order to keep sync\n   * with the object's current value.\n   * @returns {Controller} this\n   */\n  updateDisplay() {\n    return this;\n  }\n\n  /**\n   * @returns {boolean} true if the value has deviated from initialValue\n   */\n  isModified() {\n    return this.initialValue !== this.getValue();\n  }\n}\n\nexport default Controller;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport common from '../utils/common';\n\nconst EVENT_MAP = {\n  HTMLEvents: ['change'],\n  MouseEvents: ['click', 'mousemove', 'mousedown', 'mouseup', 'mouseover'],\n  KeyboardEvents: ['keydown']\n};\n\nconst EVENT_MAP_INV = {};\ncommon.each(EVENT_MAP, function(v, k) {\n  common.each(v, function(e) {\n    EVENT_MAP_INV[e] = k;\n  });\n});\n\nconst CSS_VALUE_PIXELS = /(\\d+(\\.\\d+)?)px/;\n\nfunction cssValueToPixels(val) {\n  if (val === '0' || common.isUndefined(val)) {\n    return 0;\n  }\n\n  const match = val.match(CSS_VALUE_PIXELS);\n\n  if (!common.isNull(match)) {\n    return parseFloat(match[1]);\n  }\n\n  // TODO ...ems? %?\n\n  return 0;\n}\n\n/**\n * @namespace\n * @member dat.dom\n */\nconst dom = {\n\n  /**\n   *\n   * @param elem\n   * @param selectable\n   */\n  makeSelectable: function(elem, selectable) {\n    if (elem === undefined || elem.style === undefined) return;\n\n    elem.onselectstart = selectable ? function() {\n      return false;\n    } : function() {\n    };\n\n    elem.style.MozUserSelect = selectable ? 'auto' : 'none';\n    elem.style.KhtmlUserSelect = selectable ? 'auto' : 'none';\n    elem.unselectable = selectable ? 'on' : 'off';\n  },\n\n  /**\n   *\n   * @param elem\n   * @param horizontal\n   * @param vert\n   */\n  makeFullscreen: function(elem, hor, vert) {\n    let vertical = vert;\n    let horizontal = hor;\n\n    if (common.isUndefined(horizontal)) {\n      horizontal = true;\n    }\n\n    if (common.isUndefined(vertical)) {\n      vertical = true;\n    }\n\n    elem.style.position = 'absolute';\n\n    if (horizontal) {\n      elem.style.left = 0;\n      elem.style.right = 0;\n    }\n    if (vertical) {\n      elem.style.top = 0;\n      elem.style.bottom = 0;\n    }\n  },\n\n  /**\n   *\n   * @param elem\n   * @param eventType\n   * @param params\n   */\n  fakeEvent: function(elem, eventType, pars, aux) {\n    const params = pars || {};\n    const className = EVENT_MAP_INV[eventType];\n    if (!className) {\n      throw new Error('Event type ' + eventType + ' not supported.');\n    }\n    const evt = document.createEvent(className);\n    switch (className) {\n      case 'MouseEvents':\n      {\n        const clientX = params.x || params.clientX || 0;\n        const clientY = params.y || params.clientY || 0;\n        evt.initMouseEvent(eventType, params.bubbles || false,\n          params.cancelable || true, window, params.clickCount || 1,\n          0, // screen X\n          0, // screen Y\n          clientX, // client X\n          clientY, // client Y\n          false, false, false, false, 0, null);\n        break;\n      }\n      case 'KeyboardEvents':\n      {\n        const init = evt.initKeyboardEvent || evt.initKeyEvent; // webkit || moz\n        common.defaults(params, {\n          cancelable: true,\n          ctrlKey: false,\n          altKey: false,\n          shiftKey: false,\n          metaKey: false,\n          keyCode: undefined,\n          charCode: undefined\n        });\n        init(eventType, params.bubbles || false,\n          params.cancelable, window,\n          params.ctrlKey, params.altKey,\n          params.shiftKey, params.metaKey,\n          params.keyCode, params.charCode);\n        break;\n      }\n      default:\n      {\n        evt.initEvent(eventType, params.bubbles || false, params.cancelable || true);\n        break;\n      }\n    }\n    common.defaults(evt, aux);\n    elem.dispatchEvent(evt);\n  },\n\n  /**\n   *\n   * @param elem\n   * @param event\n   * @param func\n   * @param bool\n   */\n  bind: function(elem, event, func, newBool) {\n    const bool = newBool || false;\n    if (elem.addEventListener) {\n      elem.addEventListener(event, func, bool);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + event, func);\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param event\n   * @param func\n   * @param bool\n   */\n  unbind: function(elem, event, func, newBool) {\n    const bool = newBool || false;\n    if (elem.removeEventListener) {\n      elem.removeEventListener(event, func, bool);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + event, func);\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param className\n   */\n  addClass: function(elem, className) {\n    if (elem.className === undefined) {\n      elem.className = className;\n    } else if (elem.className !== className) {\n      const classes = elem.className.split(/ +/);\n      if (classes.indexOf(className) === -1) {\n        classes.push(className);\n        elem.className = classes.join(' ').replace(/^\\s+/, '').replace(/\\s+$/, '');\n      }\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param className\n   */\n  removeClass: function(elem, className) {\n    if (className) {\n      if (elem.className === className) {\n        elem.removeAttribute('class');\n      } else {\n        const classes = elem.className.split(/ +/);\n        const index = classes.indexOf(className);\n        if (index !== -1) {\n          classes.splice(index, 1);\n          elem.className = classes.join(' ');\n        }\n      }\n    } else {\n      elem.className = undefined;\n    }\n    return dom;\n  },\n\n  hasClass: function(elem, className) {\n    return new RegExp('(?:^|\\\\s+)' + className + '(?:\\\\s+|$)').test(elem.className) || false;\n  },\n\n  /**\n   *\n   * @param elem\n   */\n  getWidth: function(elem) {\n    const style = getComputedStyle(elem);\n\n    return cssValueToPixels(style['border-left-width']) +\n      cssValueToPixels(style['border-right-width']) +\n      cssValueToPixels(style['padding-left']) +\n      cssValueToPixels(style['padding-right']) +\n      cssValueToPixels(style.width);\n  },\n\n  /**\n   *\n   * @param elem\n   */\n  getHeight: function(elem) {\n    const style = getComputedStyle(elem);\n\n    return cssValueToPixels(style['border-top-width']) +\n      cssValueToPixels(style['border-bottom-width']) +\n      cssValueToPixels(style['padding-top']) +\n      cssValueToPixels(style['padding-bottom']) +\n      cssValueToPixels(style.height);\n  },\n\n  /**\n   *\n   * @param el\n   */\n  getOffset: function(el) {\n    let elem = el;\n    const offset = { left: 0, top: 0 };\n    if (elem.offsetParent) {\n      do {\n        offset.left += elem.offsetLeft;\n        offset.top += elem.offsetTop;\n        elem = elem.offsetParent;\n      } while (elem);\n    }\n    return offset;\n  },\n\n  // http://stackoverflow.com/posts/2684561/revisions\n  /**\n   *\n   * @param elem\n   */\n  isActive: function(elem) {\n    return elem === document.activeElement && (elem.type || elem.href);\n  }\n\n};\n\nexport default dom;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a checkbox input to alter the boolean property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass BooleanController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    const _this = this;\n    this.__prev = this.getValue();\n\n    this.__checkbox = document.createElement('input');\n    this.__checkbox.setAttribute('type', 'checkbox');\n\n    function onChange() {\n      _this.setValue(!_this.__prev);\n    }\n\n    dom.bind(this.__checkbox, 'change', onChange, false);\n\n    this.domElement.appendChild(this.__checkbox);\n\n    // Match original value\n    this.updateDisplay();\n  }\n\n  setValue(v) {\n    const toReturn = super.setValue(v);\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n    this.__prev = this.getValue();\n    return toReturn;\n  }\n\n  updateDisplay() {\n    if (this.getValue() === true) {\n      this.__checkbox.setAttribute('checked', 'checked');\n      this.__checkbox.checked = true;\n      this.__prev = true;\n    } else {\n      this.__checkbox.checked = false;\n      this.__prev = false;\n    }\n\n    return super.updateDisplay();\n  }\n}\n\nexport default BooleanController;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\n/**\n * @class Provides a select input to alter the property of an object, using a\n * list of accepted values.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object|string[]} options A map of labels to acceptable values, or\n * a list of acceptable string values.\n */\nclass OptionController extends Controller {\n  constructor(object, property, opts) {\n    super(object, property);\n\n    let options = opts;\n\n    const _this = this;\n\n    /**\n     * The drop down menu\n     * @ignore\n     */\n    this.__select = document.createElement('select');\n\n    if (common.isArray(options)) {\n      const map = {};\n      common.each(options, function(element) {\n        map[element] = element;\n      });\n      options = map;\n    }\n\n    common.each(options, function(value, key) {\n      const opt = document.createElement('option');\n      opt.innerHTML = key;\n      opt.setAttribute('value', value);\n      _this.__select.appendChild(opt);\n    });\n\n    // Acknowledge original value\n    this.updateDisplay();\n\n    dom.bind(this.__select, 'change', function() {\n      const desiredValue = this.options[this.selectedIndex].value;\n      _this.setValue(desiredValue);\n    });\n\n    this.domElement.appendChild(this.__select);\n  }\n\n  setValue(v) {\n    const toReturn = super.setValue(v);\n\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n    return toReturn;\n  }\n\n  updateDisplay() {\n    if (dom.isActive(this.__select)) return this; // prevent number from updating if user is trying to manually update\n    this.__select.value = this.getValue();\n    return super.updateDisplay();\n  }\n}\n\nexport default OptionController;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a text input to alter the string property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass StringController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    const _this = this;\n\n    function onChange() {\n      _this.setValue(_this.__input.value);\n    }\n\n    function onBlur() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    this.__input = document.createElement('input');\n    this.__input.setAttribute('type', 'text');\n\n    dom.bind(this.__input, 'keyup', onChange);\n    dom.bind(this.__input, 'change', onChange);\n    dom.bind(this.__input, 'blur', onBlur);\n    dom.bind(this.__input, 'keydown', function(e) {\n      if (e.keyCode === 13) {\n        this.blur();\n      }\n    });\n\n    this.updateDisplay();\n\n    this.domElement.appendChild(this.__input);\n  }\n\n  updateDisplay() {\n    // Stops the caret from moving on account of:\n    // keyup -> setValue -> updateDisplay\n    if (!dom.isActive(this.__input)) {\n      this.__input.value = this.getValue();\n    }\n    return super.updateDisplay();\n  }\n}\n\nexport default StringController;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport common from '../utils/common';\n\nfunction numDecimals(x) {\n  const _x = x.toString();\n  if (_x.indexOf('.') > -1) {\n    return _x.length - _x.indexOf('.') - 1;\n  }\n\n  return 0;\n}\n\n/**\n * @class Represents a given property of an object that is a number.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object} [params] Optional parameters\n * @param {Number} [params.min] Minimum allowed value\n * @param {Number} [params.max] Maximum allowed value\n * @param {Number} [params.step] Increment by which to change value\n */\nclass NumberController extends Controller {\n  constructor(object, property, params) {\n    super(object, property);\n\n    const _params = params || {};\n\n    this.__min = _params.min;\n    this.__max = _params.max;\n    this.__step = _params.step;\n\n    if (common.isUndefined(this.__step)) {\n      if (this.initialValue === 0) {\n        this.__impliedStep = 1; // What are we, psychics?\n      } else {\n        // Hey Doug, check this out.\n        this.__impliedStep = Math.pow(10, Math.floor(Math.log(Math.abs(this.initialValue)) / Math.LN10)) / 10;\n      }\n    } else {\n      this.__impliedStep = this.__step;\n    }\n\n    this.__precision = numDecimals(this.__impliedStep);\n  }\n\n  setValue(v) {\n    let _v = v;\n\n    if (this.__min !== undefined && _v < this.__min) {\n      _v = this.__min;\n    } else if (this.__max !== undefined && _v > this.__max) {\n      _v = this.__max;\n    }\n\n    if (this.__step !== undefined && _v % this.__step !== 0) {\n      _v = Math.round(_v / this.__step) * this.__step;\n    }\n\n    return super.setValue(_v);\n  }\n\n  /**\n   * Specify a minimum value for <code>object[property]</code>.\n   *\n   * @param {Number} minValue The minimum value for\n   * <code>object[property]</code>\n   * @returns {dat.controllers.NumberController} this\n   */\n  min(minValue) {\n    this.__min = minValue;\n    return this;\n  }\n\n  /**\n   * Specify a maximum value for <code>object[property]</code>.\n   *\n   * @param {Number} maxValue The maximum value for\n   * <code>object[property]</code>\n   * @returns {dat.controllers.NumberController} this\n   */\n  max(maxValue) {\n    this.__max = maxValue;\n    return this;\n  }\n\n  /**\n   * Specify a step value that dat.controllers.NumberController\n   * increments by.\n   *\n   * @param {Number} stepValue The step value for\n   * dat.controllers.NumberController\n   * @default if minimum and maximum specified increment is 1% of the\n   * difference otherwise stepValue is 1\n   * @returns {dat.controllers.NumberController} this\n   */\n  step(stepValue) {\n    this.__step = stepValue;\n    this.__impliedStep = stepValue;\n    this.__precision = numDecimals(stepValue);\n    return this;\n  }\n}\n\nexport default NumberController;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport NumberController from './NumberController';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nfunction roundToDecimal(value, decimals) {\n  const tenTo = Math.pow(10, decimals);\n  return Math.round(value * tenTo) / tenTo;\n}\n\n/**\n * @class Represents a given property of an object that is a number and\n * provides an input element with which to manipulate it.\n *\n * @extends dat.controllers.Controller\n * @extends dat.controllers.NumberController\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object} [params] Optional parameters\n * @param {Number} [params.min] Minimum allowed value\n * @param {Number} [params.max] Maximum allowed value\n * @param {Number} [params.step] Increment by which to change value\n */\nclass NumberControllerBox extends NumberController {\n  constructor(object, property, params) {\n    super(object, property, params);\n\n    this.__truncationSuspended = false;\n\n    const _this = this;\n\n    /**\n     * {Number} Previous mouse y position\n     * @ignore\n     */\n    let prevY;\n\n    function onChange() {\n      const attempted = parseFloat(_this.__input.value);\n      if (!common.isNaN(attempted)) {\n        _this.setValue(attempted);\n      }\n    }\n\n    function onFinish() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    function onBlur() {\n      onFinish();\n    }\n\n    function onMouseDrag(e) {\n      const diff = prevY - e.clientY;\n      _this.setValue(_this.getValue() + diff * _this.__impliedStep);\n\n      prevY = e.clientY;\n    }\n\n    function onMouseUp() {\n      dom.unbind(window, 'mousemove', onMouseDrag);\n      dom.unbind(window, 'mouseup', onMouseUp);\n      onFinish();\n    }\n\n    function onMouseDown(e) {\n      dom.bind(window, 'mousemove', onMouseDrag);\n      dom.bind(window, 'mouseup', onMouseUp);\n      prevY = e.clientY;\n    }\n\n    this.__input = document.createElement('input');\n    this.__input.setAttribute('type', 'text');\n\n    // Makes it so manually specified values are not truncated.\n\n    dom.bind(this.__input, 'change', onChange);\n    dom.bind(this.__input, 'blur', onBlur);\n    dom.bind(this.__input, 'mousedown', onMouseDown);\n    dom.bind(this.__input, 'keydown', function(e) {\n      // When pressing enter, you can be as precise as you want.\n      if (e.keyCode === 13) {\n        _this.__truncationSuspended = true;\n        this.blur();\n        _this.__truncationSuspended = false;\n        onFinish();\n      }\n    });\n\n    this.updateDisplay();\n\n    this.domElement.appendChild(this.__input);\n  }\n\n  updateDisplay() {\n    this.__input.value = this.__truncationSuspended ? this.getValue() : roundToDecimal(this.getValue(), this.__precision);\n    return super.updateDisplay();\n  }\n}\n\nexport default NumberControllerBox;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport NumberController from './NumberController';\nimport dom from '../dom/dom';\n\nfunction map(v, i1, i2, o1, o2) {\n  return o1 + (o2 - o1) * ((v - i1) / (i2 - i1));\n}\n\n/**\n * @class Represents a given property of an object that is a number, contains\n * a minimum and maximum, and provides a slider element with which to\n * manipulate it. It should be noted that the slider element is made up of\n * <code>&lt;div&gt;</code> tags, <strong>not</strong> the html5\n * <code>&lt;slider&gt;</code> element.\n *\n * @extends dat.controllers.Controller\n * @extends dat.controllers.NumberController\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Number} minValue Minimum allowed value\n * @param {Number} maxValue Maximum allowed value\n * @param {Number} stepValue Increment by which to change value\n */\nclass NumberControllerSlider extends NumberController {\n  constructor(object, property, min, max, step) {\n    super(object, property, { min: min, max: max, step: step });\n\n    const _this = this;\n\n    this.__background = document.createElement('div');\n    this.__foreground = document.createElement('div');\n\n    dom.bind(this.__background, 'mousedown', onMouseDown);\n    dom.bind(this.__background, 'touchstart', onTouchStart);\n\n    dom.addClass(this.__background, 'slider');\n    dom.addClass(this.__foreground, 'slider-fg');\n\n    function onMouseDown(e) {\n      document.activeElement.blur();\n\n      dom.bind(window, 'mousemove', onMouseDrag);\n      dom.bind(window, 'mouseup', onMouseUp);\n\n      onMouseDrag(e);\n    }\n\n    function onMouseDrag(e) {\n      e.preventDefault();\n\n      const bgRect = _this.__background.getBoundingClientRect();\n\n      _this.setValue(\n        map(e.clientX, bgRect.left, bgRect.right, _this.__min, _this.__max)\n      );\n\n      return false;\n    }\n\n    function onMouseUp() {\n      dom.unbind(window, 'mousemove', onMouseDrag);\n      dom.unbind(window, 'mouseup', onMouseUp);\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    function onTouchStart(e) {\n      if (e.touches.length !== 1) { return; }\n      dom.bind(window, 'touchmove', onTouchMove);\n      dom.bind(window, 'touchend', onTouchEnd);\n      onTouchMove(e);\n    }\n\n    function onTouchMove(e) {\n      const clientX = e.touches[0].clientX;\n      const bgRect = _this.__background.getBoundingClientRect();\n\n      _this.setValue(\n        map(clientX, bgRect.left, bgRect.right, _this.__min, _this.__max)\n      );\n    }\n\n    function onTouchEnd() {\n      dom.unbind(window, 'touchmove', onTouchMove);\n      dom.unbind(window, 'touchend', onTouchEnd);\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    this.updateDisplay();\n\n    this.__background.appendChild(this.__foreground);\n    this.domElement.appendChild(this.__background);\n  }\n\n  updateDisplay() {\n    const pct = (this.getValue() - this.__min) / (this.__max - this.__min);\n    this.__foreground.style.width = pct * 100 + '%';\n    return super.updateDisplay();\n  }\n}\n\nexport default NumberControllerSlider;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a GUI interface to fire a specified method, a property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass FunctionController extends Controller {\n  constructor(object, property, text) {\n    super(object, property);\n\n    const _this = this;\n\n    this.__button = document.createElement('div');\n    this.__button.innerHTML = text === undefined ? 'Fire' : text;\n\n    dom.bind(this.__button, 'click', function(e) {\n      e.preventDefault();\n      _this.fire();\n      return false;\n    });\n\n    dom.addClass(this.__button, 'button');\n\n    this.domElement.appendChild(this.__button);\n  }\n\n  fire() {\n    if (this.__onChange) {\n      this.__onChange.call(this);\n    }\n    this.getValue().call(this.object);\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n  }\n}\n\nexport default FunctionController;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\nimport Color from '../color/Color';\nimport interpret from '../color/interpret';\nimport common from '../utils/common';\n\n/**\n * @class Represents a given property of an object that is a color.\n * @param {Object} object\n * @param {string} property\n */\nclass ColorController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    this.__color = new Color(this.getValue());\n    this.__temp = new Color(0);\n\n    const _this = this;\n\n    this.domElement = document.createElement('div');\n\n    dom.makeSelectable(this.domElement, false);\n\n    this.__selector = document.createElement('div');\n    this.__selector.className = 'selector';\n\n    this.__saturation_field = document.createElement('div');\n    this.__saturation_field.className = 'saturation-field';\n\n    this.__field_knob = document.createElement('div');\n    this.__field_knob.className = 'field-knob';\n    this.__field_knob_border = '2px solid ';\n\n    this.__hue_knob = document.createElement('div');\n    this.__hue_knob.className = 'hue-knob';\n\n    this.__hue_field = document.createElement('div');\n    this.__hue_field.className = 'hue-field';\n\n    this.__input = document.createElement('input');\n    this.__input.type = 'text';\n    this.__input_textShadow = '0 1px 1px ';\n\n    dom.bind(this.__input, 'keydown', function(e) {\n      if (e.keyCode === 13) { // on enter\n        onBlur.call(this);\n      }\n    });\n\n    dom.bind(this.__input, 'blur', onBlur);\n\n    dom.bind(this.__selector, 'mousedown', function(/* e */) {\n      dom\n        .addClass(this, 'drag')\n        .bind(window, 'mouseup', function(/* e */) {\n          dom.removeClass(_this.__selector, 'drag');\n        });\n    });\n\n    dom.bind(this.__selector, 'touchstart', function(/* e */) {\n      dom\n        .addClass(this, 'drag')\n        .bind(window, 'touchend', function(/* e */) {\n          dom.removeClass(_this.__selector, 'drag');\n        });\n    });\n\n    const valueField = document.createElement('div');\n\n    common.extend(this.__selector.style, {\n      width: '122px',\n      height: '102px',\n      padding: '3px',\n      backgroundColor: '#222',\n      boxShadow: '0px 1px 3px rgba(0,0,0,0.3)'\n    });\n\n    common.extend(this.__field_knob.style, {\n      position: 'absolute',\n      width: '12px',\n      height: '12px',\n      border: this.__field_knob_border + (this.__color.v < 0.5 ? '#fff' : '#000'),\n      boxShadow: '0px 1px 3px rgba(0,0,0,0.5)',\n      borderRadius: '12px',\n      zIndex: 1\n    });\n\n    common.extend(this.__hue_knob.style, {\n      position: 'absolute',\n      width: '15px',\n      height: '2px',\n      borderRight: '4px solid #fff',\n      zIndex: 1\n    });\n\n    common.extend(this.__saturation_field.style, {\n      width: '100px',\n      height: '100px',\n      border: '1px solid #555',\n      marginRight: '3px',\n      display: 'inline-block',\n      cursor: 'pointer'\n    });\n\n    common.extend(valueField.style, {\n      width: '100%',\n      height: '100%',\n      background: 'none'\n    });\n\n    linearGradient(valueField, 'top', 'rgba(0,0,0,0)', '#000');\n\n    common.extend(this.__hue_field.style, {\n      width: '15px',\n      height: '100px',\n      border: '1px solid #555',\n      cursor: 'ns-resize',\n      position: 'absolute',\n      top: '3px',\n      right: '3px'\n    });\n\n    hueGradient(this.__hue_field);\n\n    common.extend(this.__input.style, {\n      outline: 'none',\n      //      width: '120px',\n      textAlign: 'center',\n      //      padding: '4px',\n      //      marginBottom: '6px',\n      color: '#fff',\n      border: 0,\n      fontWeight: 'bold',\n      textShadow: this.__input_textShadow + 'rgba(0,0,0,0.7)'\n    });\n\n    dom.bind(this.__saturation_field, 'mousedown', fieldDown);\n    dom.bind(this.__saturation_field, 'touchstart', fieldDown);\n\n    dom.bind(this.__field_knob, 'mousedown', fieldDown);\n    dom.bind(this.__field_knob, 'touchstart', fieldDown);\n\n    dom.bind(this.__hue_field, 'mousedown', fieldDownH);\n    dom.bind(this.__hue_field, 'touchstart', fieldDownH);\n\n    function fieldDown(e) {\n      setSV(e);\n      dom.bind(window, 'mousemove', setSV);\n      dom.bind(window, 'touchmove', setSV);\n      dom.bind(window, 'mouseup', fieldUpSV);\n      dom.bind(window, 'touchend', fieldUpSV);\n    }\n\n    function fieldDownH(e) {\n      setH(e);\n      dom.bind(window, 'mousemove', setH);\n      dom.bind(window, 'touchmove', setH);\n      dom.bind(window, 'mouseup', fieldUpH);\n      dom.bind(window, 'touchend', fieldUpH);\n    }\n\n    function fieldUpSV() {\n      dom.unbind(window, 'mousemove', setSV);\n      dom.unbind(window, 'touchmove', setSV);\n      dom.unbind(window, 'mouseup', fieldUpSV);\n      dom.unbind(window, 'touchend', fieldUpSV);\n      onFinish();\n    }\n\n    function fieldUpH() {\n      dom.unbind(window, 'mousemove', setH);\n      dom.unbind(window, 'touchmove', setH);\n      dom.unbind(window, 'mouseup', fieldUpH);\n      dom.unbind(window, 'touchend', fieldUpH);\n      onFinish();\n    }\n\n    function onBlur() {\n      const i = interpret(this.value);\n      if (i !== false) {\n        _this.__color.__state = i;\n        _this.setValue(_this.__color.toOriginal());\n      } else {\n        this.value = _this.__color.toString();\n      }\n    }\n\n    function onFinish() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.__color.toOriginal());\n      }\n    }\n\n    this.__saturation_field.appendChild(valueField);\n    this.__selector.appendChild(this.__field_knob);\n    this.__selector.appendChild(this.__saturation_field);\n    this.__selector.appendChild(this.__hue_field);\n    this.__hue_field.appendChild(this.__hue_knob);\n\n    this.domElement.appendChild(this.__input);\n    this.domElement.appendChild(this.__selector);\n\n    this.updateDisplay();\n\n    function setSV(e) {\n      if (e.type.indexOf('touch') === -1) { e.preventDefault(); }\n\n      const fieldRect = _this.__saturation_field.getBoundingClientRect();\n      const { clientX, clientY } = (e.touches && e.touches[0]) || e;\n      let s = (clientX - fieldRect.left) / (fieldRect.right - fieldRect.left);\n      let v = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n\n      if (v > 1) {\n        v = 1;\n      } else if (v < 0) {\n        v = 0;\n      }\n\n      if (s > 1) {\n        s = 1;\n      } else if (s < 0) {\n        s = 0;\n      }\n\n      _this.__color.v = v;\n      _this.__color.s = s;\n\n      _this.setValue(_this.__color.toOriginal());\n\n\n      return false;\n    }\n\n    function setH(e) {\n      if (e.type.indexOf('touch') === -1) { e.preventDefault(); }\n\n      const fieldRect = _this.__hue_field.getBoundingClientRect();\n      const { clientY } = (e.touches && e.touches[0]) || e;\n      let h = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n\n      if (h > 1) {\n        h = 1;\n      } else if (h < 0) {\n        h = 0;\n      }\n\n      _this.__color.h = h * 360;\n\n      _this.setValue(_this.__color.toOriginal());\n\n      return false;\n    }\n  }\n\n  updateDisplay() {\n    const i = interpret(this.getValue());\n\n    if (i !== false) {\n      let mismatch = false;\n\n      // Check for mismatch on the interpreted value.\n\n      common.each(Color.COMPONENTS, function(component) {\n        if (!common.isUndefined(i[component]) && !common.isUndefined(this.__color.__state[component]) &&\n          i[component] !== this.__color.__state[component]) {\n          mismatch = true;\n          return {}; // break\n        }\n      }, this);\n\n      // If nothing diverges, we keep our previous values\n      // for statefulness, otherwise we recalculate fresh\n      if (mismatch) {\n        common.extend(this.__color.__state, i);\n      }\n    }\n\n    common.extend(this.__temp.__state, this.__color.__state);\n\n    this.__temp.a = 1;\n\n    const flip = (this.__color.v < 0.5 || this.__color.s > 0.5) ? 255 : 0;\n    const _flip = 255 - flip;\n\n    common.extend(this.__field_knob.style, {\n      marginLeft: 100 * this.__color.s - 7 + 'px',\n      marginTop: 100 * (1 - this.__color.v) - 7 + 'px',\n      backgroundColor: this.__temp.toHexString(),\n      border: this.__field_knob_border + 'rgb(' + flip + ',' + flip + ',' + flip + ')'\n    });\n\n    this.__hue_knob.style.marginTop = (1 - this.__color.h / 360) * 100 + 'px';\n\n    this.__temp.s = 1;\n    this.__temp.v = 1;\n\n    linearGradient(this.__saturation_field, 'left', '#fff', this.__temp.toHexString());\n\n    this.__input.value = this.__color.toString();\n\n    common.extend(this.__input.style, {\n      backgroundColor: this.__color.toHexString(),\n      color: 'rgb(' + flip + ',' + flip + ',' + flip + ')',\n      textShadow: this.__input_textShadow + 'rgba(' + _flip + ',' + _flip + ',' + _flip + ',.7)'\n    });\n  }\n}\n\nconst vendors = ['-moz-', '-o-', '-webkit-', '-ms-', ''];\n\nfunction linearGradient(elem, x, a, b) {\n  elem.style.background = '';\n  common.each(vendors, function(vendor) {\n    elem.style.cssText += 'background: ' + vendor + 'linear-gradient(' + x + ', ' + a + ' 0%, ' + b + ' 100%); ';\n  });\n}\n\nfunction hueGradient(elem) {\n  elem.style.background = '';\n  elem.style.cssText += 'background: -moz-linear-gradient(top,  #ff0000 0%, #ff00ff 17%, #0000ff 34%, #00ffff 50%, #00ff00 67%, #ffff00 84%, #ff0000 100%);';\n  elem.style.cssText += 'background: -webkit-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: -o-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: -ms-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n}\n\nexport default ColorController;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nconst css = {\n  load: function(url, indoc) {\n    const doc = indoc || document;\n    const link = doc.createElement('link');\n    link.type = 'text/css';\n    link.rel = 'stylesheet';\n    link.href = url;\n    doc.getElementsByTagName('head')[0].appendChild(link);\n  },\n\n  inject: function(cssContent, indoc) {\n    const doc = indoc || document;\n    const injected = document.createElement('style');\n    injected.type = 'text/css';\n    injected.innerHTML = cssContent;\n    const head = doc.getElementsByTagName('head')[0];\n    try {\n      head.appendChild(injected);\n    } catch (e) { // Unable to inject CSS, probably because of a Content Security Policy\n    }\n  }\n};\n\nexport default css;\n","const saveDialogContents = `<div id=\"dg-save\" class=\"dg dialogue\">\n\n  Here's the new load parameter for your <code>GUI</code>'s constructor:\n\n  <textarea id=\"dg-new-constructor\"></textarea>\n\n  <div id=\"dg-save-locally\">\n\n    <input id=\"dg-local-storage\" type=\"checkbox\"/> Automatically save\n    values to <code>localStorage</code> on exit.\n\n    <div id=\"dg-local-explain\">The values saved to <code>localStorage</code> will\n      override those passed to <code>dat.GUI</code>'s constructor. This makes it\n      easier to work incrementally, but <code>localStorage</code> is fragile,\n      and your friends may not see the same values you do.\n\n    </div>\n\n  </div>\n\n</div>`;\n\nexport default saveDialogContents;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport OptionController from './OptionController';\nimport NumberControllerBox from './NumberControllerBox';\nimport NumberControllerSlider from './NumberControllerSlider';\nimport StringController from './StringController';\nimport FunctionController from './FunctionController';\nimport BooleanController from './BooleanController';\nimport common from '../utils/common';\n\nconst ControllerFactory = function(object, property) {\n  const initialValue = object[property];\n\n  // Providing options?\n  if (common.isArray(arguments[2]) || common.isObject(arguments[2])) {\n    return new OptionController(object, property, arguments[2]);\n  }\n\n  // Providing a map?\n  if (common.isNumber(initialValue)) {\n    // Has min and max? (slider)\n    if (common.isNumber(arguments[2]) && common.isNumber(arguments[3])) {\n      // has step?\n      if (common.isNumber(arguments[4])) {\n        return new NumberControllerSlider(object, property,\n          arguments[2], arguments[3], arguments[4]);\n      }\n\n      return new NumberControllerSlider(object, property, arguments[2], arguments[3]);\n    }\n\n    // number box\n    if (common.isNumber(arguments[4])) { // has step\n      return new NumberControllerBox(object, property,\n        { min: arguments[2], max: arguments[3], step: arguments[4] });\n    }\n    return new NumberControllerBox(object, property, { min: arguments[2], max: arguments[3] });\n  }\n\n  if (common.isString(initialValue)) {\n    return new StringController(object, property);\n  }\n\n  if (common.isFunction(initialValue)) {\n    return new FunctionController(object, property, '');\n  }\n\n  if (common.isBoolean(initialValue)) {\n    return new BooleanController(object, property);\n  }\n\n  return null;\n};\n\nexport default ControllerFactory;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction requestAnimationFrame(callback) {\n  setTimeout(callback, 1000 / 60);\n}\n\nexport default window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    requestAnimationFrame;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport dom from './dom';\nimport common from '../utils/common';\n\nclass CenteredDiv {\n  constructor() {\n    this.backgroundElement = document.createElement('div');\n    common.extend(this.backgroundElement.style, {\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      top: 0,\n      left: 0,\n      display: 'none',\n      zIndex: '1000',\n      opacity: 0,\n      WebkitTransition: 'opacity 0.2s linear',\n      transition: 'opacity 0.2s linear'\n    });\n\n    dom.makeFullscreen(this.backgroundElement);\n    this.backgroundElement.style.position = 'fixed';\n\n    this.domElement = document.createElement('div');\n    common.extend(this.domElement.style, {\n      position: 'fixed',\n      display: 'none',\n      zIndex: '1001',\n      opacity: 0,\n      WebkitTransition: '-webkit-transform 0.2s ease-out, opacity 0.2s linear',\n      transition: 'transform 0.2s ease-out, opacity 0.2s linear'\n    });\n\n\n    document.body.appendChild(this.backgroundElement);\n    document.body.appendChild(this.domElement);\n\n    const _this = this;\n    dom.bind(this.backgroundElement, 'click', function() {\n      _this.hide();\n    });\n  }\n\n  show() {\n    const _this = this;\n\n    this.backgroundElement.style.display = 'block';\n\n    this.domElement.style.display = 'block';\n    this.domElement.style.opacity = 0;\n    //    this.domElement.style.top = '52%';\n    this.domElement.style.webkitTransform = 'scale(1.1)';\n\n    this.layout();\n\n    common.defer(function() {\n      _this.backgroundElement.style.opacity = 1;\n      _this.domElement.style.opacity = 1;\n      _this.domElement.style.webkitTransform = 'scale(1)';\n    });\n  }\n\n  /**\n   * Hide centered div\n   */\n  hide() {\n    const _this = this;\n\n    const hide = function() {\n      _this.domElement.style.display = 'none';\n      _this.backgroundElement.style.display = 'none';\n\n      dom.unbind(_this.domElement, 'webkitTransitionEnd', hide);\n      dom.unbind(_this.domElement, 'transitionend', hide);\n      dom.unbind(_this.domElement, 'oTransitionEnd', hide);\n    };\n\n    dom.bind(this.domElement, 'webkitTransitionEnd', hide);\n    dom.bind(this.domElement, 'transitionend', hide);\n    dom.bind(this.domElement, 'oTransitionEnd', hide);\n\n    this.backgroundElement.style.opacity = 0;\n    //    this.domElement.style.top = '48%';\n    this.domElement.style.opacity = 0;\n    this.domElement.style.webkitTransform = 'scale(1.1)';\n  }\n\n  layout() {\n    this.domElement.style.left = window.innerWidth / 2 - dom.getWidth(this.domElement) / 2 + 'px';\n    this.domElement.style.top = window.innerHeight / 2 - dom.getHeight(this.domElement) / 2 + 'px';\n  }\n}\n\nexport default CenteredDiv;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport css from '../utils/css';\nimport saveDialogueContents from './saveDialogue.html';\nimport ControllerFactory from '../controllers/ControllerFactory';\nimport Controller from '../controllers/Controller';\nimport BooleanController from '../controllers/BooleanController';\nimport FunctionController from '../controllers/FunctionController';\nimport NumberControllerBox from '../controllers/NumberControllerBox';\nimport NumberControllerSlider from '../controllers/NumberControllerSlider';\nimport ColorController from '../controllers/ColorController';\nimport requestAnimationFrame from '../utils/requestAnimationFrame';\nimport CenteredDiv from '../dom/CenteredDiv';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nimport styleSheet from './style.scss'; // CSS to embed in build\n\ncss.inject(styleSheet);\n\n/** @ignore Outer-most className for GUI's */\nconst CSS_NAMESPACE = 'dg';\n\nconst HIDE_KEY_CODE = 72;\n\n/** @ignore The only value shared between the JS and SCSS. Use caution. */\nconst CLOSE_BUTTON_HEIGHT = 20;\n\nconst DEFAULT_DEFAULT_PRESET_NAME = 'Default';\n\nconst SUPPORTS_LOCAL_STORAGE = (function() {\n  try {\n    return !!window.localStorage;\n  } catch (e) {\n    return false;\n  }\n}());\n\nlet SAVE_DIALOGUE;\n\n/** @ignore Have we yet to create an autoPlace GUI? */\nlet autoPlaceVirgin = true;\n\n/** @ignore Fixed position div that auto place GUI's go inside */\nlet autoPlaceContainer;\n\n/** @ignore Are we hiding the GUI's ? */\nlet hide = false;\n\n/** @private GUI's which should be hidden */\nconst hideableGuis = [];\n\n/**\n * @class A lightweight controller library for JavaScript. It allows you to easily\n * manipulate variables and fire functions on the fly.\n *\n * @typicalname gui\n *\n * @example\n * // Creating a GUI with options.\n * var gui = new dat.GUI({name: 'My GUI'});\n *\n * @example\n * // Creating a GUI and a subfolder.\n * var gui = new dat.GUI();\n * var folder1 = gui.addFolder('Flow Field');\n *\n * @param {Object} [params]\n * @param {String} [params.name] The name of this GUI.\n * @param {Object} [params.load] JSON object representing the saved state of\n * this GUI.\n * @param {dat.gui.GUI} [params.parent] The GUI I'm nested in.\n * @param {Boolean} [params.autoPlace=true]\n * @param {Boolean} [params.hideable=true] If true, GUI is shown/hidden by <kbd>h</kbd> keypress.\n * @param {Boolean} [params.closed=false] If true, starts closed\n * @param {Boolean} [params.closeOnTop=false] If true, close/open button shows on top of the GUI\n */\nconst GUI = function(pars) {\n  const _this = this;\n\n  let params = pars || {};\n\n  /**\n   * Outermost DOM Element\n   * @type {DOMElement}\n   */\n  this.domElement = document.createElement('div');\n  this.__ul = document.createElement('ul');\n  this.domElement.appendChild(this.__ul);\n\n  dom.addClass(this.domElement, CSS_NAMESPACE);\n\n  /**\n   * Nested GUI's by name\n   * @ignore\n   */\n  this.__folders = {};\n\n  this.__controllers = [];\n\n  /**\n   * List of objects I'm remembering for save, only used in top level GUI\n   * @ignore\n   */\n  this.__rememberedObjects = [];\n\n  /**\n   * Maps the index of remembered objects to a map of controllers, only used\n   * in top level GUI.\n   *\n   * @private\n   * @ignore\n   *\n   * @example\n   * [\n   *  {\n     *    propertyName: Controller,\n     *    anotherPropertyName: Controller\n     *  },\n   *  {\n     *    propertyName: Controller\n     *  }\n   * ]\n   */\n  this.__rememberedObjectIndecesToControllers = [];\n\n  this.__listening = [];\n\n  // Default parameters\n  params = common.defaults(params, {\n    closeOnTop: false,\n    autoPlace: true,\n    width: GUI.DEFAULT_WIDTH\n  });\n\n  params = common.defaults(params, {\n    resizable: params.autoPlace,\n    hideable: params.autoPlace\n  });\n\n  if (!common.isUndefined(params.load)) {\n    // Explicit preset\n    if (params.preset) {\n      params.load.preset = params.preset;\n    }\n  } else {\n    params.load = { preset: DEFAULT_DEFAULT_PRESET_NAME };\n  }\n\n  if (common.isUndefined(params.parent) && params.hideable) {\n    hideableGuis.push(this);\n  }\n\n  // Only root level GUI's are resizable.\n  params.resizable = common.isUndefined(params.parent) && params.resizable;\n\n  if (params.autoPlace && common.isUndefined(params.scrollable)) {\n    params.scrollable = true;\n  }\n  //    params.scrollable = common.isUndefined(params.parent) && params.scrollable === true;\n\n  // Not part of params because I don't want people passing this in via\n  // constructor. Should be a 'remembered' value.\n  let useLocalStorage =\n    SUPPORTS_LOCAL_STORAGE &&\n    localStorage.getItem(getLocalStorageHash(this, 'isLocal')) === 'true';\n\n  let saveToLocalStorage;\n  let titleRow;\n\n  Object.defineProperties(this,\n    /** @lends GUI.prototype */\n    {\n      /**\n       * The parent <code>GUI</code>\n       * @type dat.gui.GUI\n       */\n      parent: {\n        get: function() {\n          return params.parent;\n        }\n      },\n\n      scrollable: {\n        get: function() {\n          return params.scrollable;\n        }\n      },\n\n      /**\n       * Handles <code>GUI</code>'s element placement for you\n       * @type Boolean\n       */\n      autoPlace: {\n        get: function() {\n          return params.autoPlace;\n        }\n      },\n\n      /**\n       * Handles <code>GUI</code>'s position of open/close button\n       * @type Boolean\n       */\n      closeOnTop: {\n        get: function() {\n          return params.closeOnTop;\n        }\n      },\n\n      /**\n       * The identifier for a set of saved values\n       * @type String\n       */\n      preset: {\n        get: function() {\n          if (_this.parent) {\n            return _this.getRoot().preset;\n          }\n\n          return params.load.preset;\n        },\n\n        set: function(v) {\n          if (_this.parent) {\n            _this.getRoot().preset = v;\n          } else {\n            params.load.preset = v;\n          }\n          setPresetSelectIndex(this);\n          _this.revert();\n        }\n      },\n\n      /**\n       * The width of <code>GUI</code> element\n       * @type Number\n       */\n      width: {\n        get: function() {\n          return params.width;\n        },\n        set: function(v) {\n          params.width = v;\n          setWidth(_this, v);\n        }\n      },\n\n      /**\n       * The name of <code>GUI</code>. Used for folders. i.e\n       * a folder's name\n       * @type String\n       */\n      name: {\n        get: function() {\n          return params.name;\n        },\n        set: function(v) {\n          // TODO Check for collisions among sibling folders\n          params.name = v;\n          if (titleRow) {\n            titleRow.innerHTML = params.name;\n          }\n        }\n      },\n\n      /**\n       * Whether the <code>GUI</code> is collapsed or not\n       * @type Boolean\n       */\n      closed: {\n        get: function() {\n          return params.closed;\n        },\n        set: function(v) {\n          params.closed = v;\n          if (params.closed) {\n            dom.addClass(_this.__ul, GUI.CLASS_CLOSED);\n          } else {\n            dom.removeClass(_this.__ul, GUI.CLASS_CLOSED);\n          }\n          // For browsers that aren't going to respect the CSS transition,\n          // Lets just check our height against the window height right off\n          // the bat.\n          this.onResize();\n\n          if (_this.__closeButton) {\n            _this.__closeButton.innerHTML = v ? GUI.TEXT_OPEN : GUI.TEXT_CLOSED;\n          }\n        }\n      },\n\n      /**\n       * Contains all presets\n       * @type Object\n       */\n      load: {\n        get: function() {\n          return params.load;\n        }\n      },\n\n      /**\n       * Determines whether or not to use <a href=\"https://developer.mozilla.org/en/DOM/Storage#localStorage\">localStorage</a> as the means for\n       * <code>remember</code>ing\n       * @type Boolean\n       */\n      useLocalStorage: {\n\n        get: function() {\n          return useLocalStorage;\n        },\n        set: function(bool) {\n          if (SUPPORTS_LOCAL_STORAGE) {\n            useLocalStorage = bool;\n            if (bool) {\n              dom.bind(window, 'unload', saveToLocalStorage);\n            } else {\n              dom.unbind(window, 'unload', saveToLocalStorage);\n            }\n            localStorage.setItem(getLocalStorageHash(_this, 'isLocal'), bool);\n          }\n        }\n      }\n    });\n\n  // Are we a root level GUI?\n  if (common.isUndefined(params.parent)) {\n    this.closed = params.closed || false;\n\n    dom.addClass(this.domElement, GUI.CLASS_MAIN);\n    dom.makeSelectable(this.domElement, false);\n\n    // Are we supposed to be loading locally?\n    if (SUPPORTS_LOCAL_STORAGE) {\n      if (useLocalStorage) {\n        _this.useLocalStorage = true;\n\n        const savedGui = localStorage.getItem(getLocalStorageHash(this, 'gui'));\n\n        if (savedGui) {\n          params.load = JSON.parse(savedGui);\n        }\n      }\n    }\n\n    this.__closeButton = document.createElement('div');\n    this.__closeButton.innerHTML = GUI.TEXT_CLOSED;\n    dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BUTTON);\n    if (params.closeOnTop) {\n      dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_TOP);\n      this.domElement.insertBefore(this.__closeButton, this.domElement.childNodes[0]);\n    } else {\n      dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BOTTOM);\n      this.domElement.appendChild(this.__closeButton);\n    }\n\n    dom.bind(this.__closeButton, 'click', function() {\n      _this.closed = !_this.closed;\n    });\n    // Oh, you're a nested GUI!\n  } else {\n    if (params.closed === undefined) {\n      params.closed = true;\n    }\n\n    const titleRowName = document.createTextNode(params.name);\n    dom.addClass(titleRowName, 'controller-name');\n\n    titleRow = addRow(_this, titleRowName);\n\n    const onClickTitle = function(e) {\n      e.preventDefault();\n      _this.closed = !_this.closed;\n      return false;\n    };\n\n    dom.addClass(this.__ul, GUI.CLASS_CLOSED);\n\n    dom.addClass(titleRow, 'title');\n    dom.bind(titleRow, 'click', onClickTitle);\n\n    if (!params.closed) {\n      this.closed = false;\n    }\n  }\n\n  if (params.autoPlace) {\n    if (common.isUndefined(params.parent)) {\n      if (autoPlaceVirgin) {\n        autoPlaceContainer = document.createElement('div');\n        dom.addClass(autoPlaceContainer, CSS_NAMESPACE);\n        dom.addClass(autoPlaceContainer, GUI.CLASS_AUTO_PLACE_CONTAINER);\n        document.body.appendChild(autoPlaceContainer);\n        autoPlaceVirgin = false;\n      }\n\n      // Put it in the dom for you.\n      autoPlaceContainer.appendChild(this.domElement);\n\n      // Apply the auto styles\n      dom.addClass(this.domElement, GUI.CLASS_AUTO_PLACE);\n    }\n\n\n    // Make it not elastic.\n    if (!this.parent) {\n      setWidth(_this, params.width);\n    }\n  }\n\n  this.__resizeHandler = function() {\n    _this.onResizeDebounced();\n  };\n\n  dom.bind(window, 'resize', this.__resizeHandler);\n  dom.bind(this.__ul, 'webkitTransitionEnd', this.__resizeHandler);\n  dom.bind(this.__ul, 'transitionend', this.__resizeHandler);\n  dom.bind(this.__ul, 'oTransitionEnd', this.__resizeHandler);\n  this.onResize();\n\n  if (params.resizable) {\n    addResizeHandle(this);\n  }\n\n  saveToLocalStorage = function() {\n    if (SUPPORTS_LOCAL_STORAGE && localStorage.getItem(getLocalStorageHash(_this, 'isLocal')) === 'true') {\n      localStorage.setItem(getLocalStorageHash(_this, 'gui'), JSON.stringify(_this.getSaveObject()));\n    }\n  };\n\n  // expose this method publicly\n  this.saveToLocalStorageIfPossible = saveToLocalStorage;\n\n  function resetWidth() {\n    const root = _this.getRoot();\n    root.width += 1;\n    common.defer(function() {\n      root.width -= 1;\n    });\n  }\n\n  if (!params.parent) {\n    resetWidth();\n  }\n};\n\nGUI.toggleHide = function() {\n  hide = !hide;\n  common.each(hideableGuis, function(gui) {\n    gui.domElement.style.display = hide ? 'none' : '';\n  });\n};\n\nGUI.CLASS_AUTO_PLACE = 'a';\nGUI.CLASS_AUTO_PLACE_CONTAINER = 'ac';\nGUI.CLASS_MAIN = 'main';\nGUI.CLASS_CONTROLLER_ROW = 'cr';\nGUI.CLASS_TOO_TALL = 'taller-than-window';\nGUI.CLASS_CLOSED = 'closed';\nGUI.CLASS_CLOSE_BUTTON = 'close-button';\nGUI.CLASS_CLOSE_TOP = 'close-top';\nGUI.CLASS_CLOSE_BOTTOM = 'close-bottom';\nGUI.CLASS_DRAG = 'drag';\n\nGUI.DEFAULT_WIDTH = 245;\nGUI.TEXT_CLOSED = 'Close Controls';\nGUI.TEXT_OPEN = 'Open Controls';\n\nGUI._keydownHandler = function(e) {\n  if (document.activeElement.type !== 'text' &&\n    (e.which === HIDE_KEY_CODE || e.keyCode === HIDE_KEY_CODE)) {\n    GUI.toggleHide();\n  }\n};\ndom.bind(window, 'keydown', GUI._keydownHandler, false);\n\ncommon.extend(\n  GUI.prototype,\n\n  /** @lends GUI.prototype */\n  {\n\n    /**\n     * Adds a new {@link Controller} to the GUI. The type of controller created\n     * is inferred from the initial value of <code>object[property]</code>. For\n     * color properties, see {@link addColor}.\n     *\n     * @param {Object} object The object to be manipulated\n     * @param {String} property The name of the property to be manipulated\n     * @param {Number} [min] Minimum allowed value\n     * @param {Number} [max] Maximum allowed value\n     * @param {Number} [step] Increment by which to change value\n     * @returns {Controller} The controller that was added to the GUI.\n     * @instance\n     *\n     * @example\n     * // Add a string controller.\n     * var person = {name: 'Sam'};\n     * gui.add(person, 'name');\n     *\n     * @example\n     * // Add a number controller slider.\n     * var person = {age: 45};\n     * gui.add(person, 'age', 0, 100);\n     */\n    add: function(object, property) {\n      return add(\n        this,\n        object,\n        property,\n        {\n          factoryArgs: Array.prototype.slice.call(arguments, 2)\n        }\n      );\n    },\n\n    /**\n     * Adds a new color controller to the GUI.\n     *\n     * @param object\n     * @param property\n     * @returns {Controller} The controller that was added to the GUI.\n     * @instance\n     *\n     * @example\n     * var palette = {\n     *   color1: '#FF0000', // CSS string\n     *   color2: [ 0, 128, 255 ], // RGB array\n     *   color3: [ 0, 128, 255, 0.3 ], // RGB with alpha\n     *   color4: { h: 350, s: 0.9, v: 0.3 } // Hue, saturation, value\n     * };\n     * gui.addColor(palette, 'color1');\n     * gui.addColor(palette, 'color2');\n     * gui.addColor(palette, 'color3');\n     * gui.addColor(palette, 'color4');\n     */\n    addColor: function(object, property) {\n      return add(\n        this,\n        object,\n        property,\n        {\n          color: true\n        }\n      );\n    },\n\n    /**\n     * Removes the given controller from the GUI.\n     * @param {Controller} controller\n     * @instance\n     */\n    remove: function(controller) {\n      // TODO listening?\n      this.__ul.removeChild(controller.__li);\n      this.__controllers.splice(this.__controllers.indexOf(controller), 1);\n      const _this = this;\n      common.defer(function() {\n        _this.onResize();\n      });\n    },\n\n    /**\n     * Removes the root GUI from the document and unbinds all event listeners.\n     * For subfolders, use `gui.removeFolder(folder)` instead.\n     * @instance\n     */\n    destroy: function() {\n      if (this.parent) {\n        throw new Error(\n          'Only the root GUI should be removed with .destroy(). ' +\n          'For subfolders, use gui.removeFolder(folder) instead.'\n        );\n      }\n\n      if (this.autoPlace) {\n        autoPlaceContainer.removeChild(this.domElement);\n      }\n\n      const _this = this;\n      common.each(this.__folders, function(subfolder) {\n        _this.removeFolder(subfolder);\n      });\n\n      dom.unbind(window, 'keydown', GUI._keydownHandler, false);\n\n      removeListeners(this);\n    },\n\n    /**\n     * Creates a new subfolder GUI instance.\n     * @param name\n     * @returns {dat.gui.GUI} The new folder.\n     * @throws {Error} if this GUI already has a folder by the specified\n     * name\n     * @instance\n     */\n    addFolder: function(name) {\n      // We have to prevent collisions on names in order to have a key\n      // by which to remember saved values\n      if (this.__folders[name] !== undefined) {\n        throw new Error('You already have a folder in this GUI by the' +\n          ' name \"' + name + '\"');\n      }\n\n      const newGuiParams = { name: name, parent: this };\n\n      // We need to pass down the autoPlace trait so that we can\n      // attach event listeners to open/close folder actions to\n      // ensure that a scrollbar appears if the window is too short.\n      newGuiParams.autoPlace = this.autoPlace;\n\n      // Do we have saved appearance data for this folder?\n      if (this.load && // Anything loaded?\n        this.load.folders && // Was my parent a dead-end?\n        this.load.folders[name]) { // Did daddy remember me?\n        // Start me closed if I was closed\n        newGuiParams.closed = this.load.folders[name].closed;\n\n        // Pass down the loaded data\n        newGuiParams.load = this.load.folders[name];\n      }\n\n      const gui = new GUI(newGuiParams);\n      this.__folders[name] = gui;\n\n      const li = addRow(this, gui.domElement);\n      dom.addClass(li, 'folder');\n      return gui;\n    },\n\n    /**\n     * Removes a subfolder GUI instance.\n     * @param {dat.gui.GUI} folder The folder to remove.\n     * @instance\n     */\n    removeFolder: function(folder) {\n      this.__ul.removeChild(folder.domElement.parentElement);\n\n      delete this.__folders[folder.name];\n\n      // Do we have saved appearance data for this folder?\n      if (this.load && // Anything loaded?\n        this.load.folders && // Was my parent a dead-end?\n        this.load.folders[folder.name]) {\n        delete this.load.folders[folder.name];\n      }\n\n      removeListeners(folder);\n\n      const _this = this;\n\n      common.each(folder.__folders, function(subfolder) {\n        folder.removeFolder(subfolder);\n      });\n\n      common.defer(function() {\n        _this.onResize();\n      });\n    },\n\n    /**\n     * Opens the GUI.\n     */\n    open: function() {\n      this.closed = false;\n    },\n\n    /**\n     * Closes the GUI.\n     */\n    close: function() {\n      this.closed = true;\n    },\n\n    /**\n    * Hides the GUI.\n    */\n    hide: function() {\n      this.domElement.style.display = 'none';\n    },\n\n    /**\n    * Shows the GUI.\n    */\n    show: function() {\n      this.domElement.style.display = '';\n    },\n\n\n    onResize: function() {\n      // we debounce this function to prevent performance issues when rotating on tablet/mobile\n      const root = this.getRoot();\n      if (root.scrollable) {\n        const top = dom.getOffset(root.__ul).top;\n        let h = 0;\n\n        common.each(root.__ul.childNodes, function(node) {\n          if (!(root.autoPlace && node === root.__save_row)) {\n            h += dom.getHeight(node);\n          }\n        });\n\n        if (window.innerHeight - top - CLOSE_BUTTON_HEIGHT < h) {\n          dom.addClass(root.domElement, GUI.CLASS_TOO_TALL);\n          root.__ul.style.height = window.innerHeight - top - CLOSE_BUTTON_HEIGHT + 'px';\n        } else {\n          dom.removeClass(root.domElement, GUI.CLASS_TOO_TALL);\n          root.__ul.style.height = 'auto';\n        }\n      }\n\n      if (root.__resize_handle) {\n        common.defer(function() {\n          root.__resize_handle.style.height = root.__ul.offsetHeight + 'px';\n        });\n      }\n\n      if (root.__closeButton) {\n        root.__closeButton.style.width = root.width + 'px';\n      }\n    },\n\n    onResizeDebounced: common.debounce(function() { this.onResize(); }, 50),\n\n    /**\n     * Mark objects for saving. The order of these objects cannot change as\n     * the GUI grows. When remembering new objects, append them to the end\n     * of the list.\n     *\n     * @param {...Object} objects\n     * @throws {Error} if not called on a top level GUI.\n     * @instance\n     * @ignore\n     */\n    remember: function() {\n      if (common.isUndefined(SAVE_DIALOGUE)) {\n        SAVE_DIALOGUE = new CenteredDiv();\n        SAVE_DIALOGUE.domElement.innerHTML = saveDialogueContents;\n      }\n\n      if (this.parent) {\n        throw new Error('You can only call remember on a top level GUI.');\n      }\n\n      const _this = this;\n\n      common.each(Array.prototype.slice.call(arguments), function(object) {\n        if (_this.__rememberedObjects.length === 0) {\n          addSaveMenu(_this);\n        }\n        if (_this.__rememberedObjects.indexOf(object) === -1) {\n          _this.__rememberedObjects.push(object);\n        }\n      });\n\n      if (this.autoPlace) {\n        // Set save row width\n        setWidth(this, this.width);\n      }\n    },\n\n    /**\n     * @returns {dat.gui.GUI} the topmost parent GUI of a nested GUI.\n     * @instance\n     */\n    getRoot: function() {\n      let gui = this;\n      while (gui.parent) {\n        gui = gui.parent;\n      }\n      return gui;\n    },\n\n    /**\n     * @returns {Object} a JSON object representing the current state of\n     * this GUI as well as its remembered properties.\n     * @instance\n     */\n    getSaveObject: function() {\n      const toReturn = this.load;\n      toReturn.closed = this.closed;\n\n      // Am I remembering any values?\n      if (this.__rememberedObjects.length > 0) {\n        toReturn.preset = this.preset;\n\n        if (!toReturn.remembered) {\n          toReturn.remembered = {};\n        }\n\n        toReturn.remembered[this.preset] = getCurrentPreset(this);\n      }\n\n      toReturn.folders = {};\n      common.each(this.__folders, function(element, key) {\n        toReturn.folders[key] = element.getSaveObject();\n      });\n\n      return toReturn;\n    },\n\n    save: function() {\n      if (!this.load.remembered) {\n        this.load.remembered = {};\n      }\n\n      this.load.remembered[this.preset] = getCurrentPreset(this);\n      markPresetModified(this, false);\n      this.saveToLocalStorageIfPossible();\n    },\n\n    saveAs: function(presetName) {\n      if (!this.load.remembered) {\n        // Retain default values upon first save\n        this.load.remembered = {};\n        this.load.remembered[DEFAULT_DEFAULT_PRESET_NAME] = getCurrentPreset(this, true);\n      }\n\n      this.load.remembered[presetName] = getCurrentPreset(this);\n      this.preset = presetName;\n      addPresetOption(this, presetName, true);\n      this.saveToLocalStorageIfPossible();\n    },\n\n    revert: function(gui) {\n      common.each(this.__controllers, function(controller) {\n        // Make revert work on Default.\n        if (!this.getRoot().load.remembered) {\n          controller.setValue(controller.initialValue);\n        } else {\n          recallSavedValue(gui || this.getRoot(), controller);\n        }\n\n        // fire onFinishChange callback\n        if (controller.__onFinishChange) {\n          controller.__onFinishChange.call(controller, controller.getValue());\n        }\n      }, this);\n\n      common.each(this.__folders, function(folder) {\n        folder.revert(folder);\n      });\n\n      if (!gui) {\n        markPresetModified(this.getRoot(), false);\n      }\n    },\n\n    listen: function(controller) {\n      const init = this.__listening.length === 0;\n      this.__listening.push(controller);\n      if (init) {\n        updateDisplays(this.__listening);\n      }\n    },\n\n    updateDisplay: function() {\n      common.each(this.__controllers, function(controller) {\n        controller.updateDisplay();\n      });\n      common.each(this.__folders, function(folder) {\n        folder.updateDisplay();\n      });\n    }\n  }\n);\n\n/**\n * Add a row to the end of the GUI or before another row.\n *\n * @param gui\n * @param [newDom] If specified, inserts the dom content in the new row\n * @param [liBefore] If specified, places the new row before another row\n *\n * @ignore\n */\nfunction addRow(gui, newDom, liBefore) {\n  const li = document.createElement('li');\n  if (newDom) {\n    li.appendChild(newDom);\n  }\n\n  if (liBefore) {\n    gui.__ul.insertBefore(li, liBefore);\n  } else {\n    gui.__ul.appendChild(li);\n  }\n  gui.onResize();\n  return li;\n}\n\nfunction removeListeners(gui) {\n  dom.unbind(window, 'resize', gui.__resizeHandler);\n\n  if (gui.saveToLocalStorageIfPossible) {\n    dom.unbind(window, 'unload', gui.saveToLocalStorageIfPossible);\n  }\n}\n\nfunction markPresetModified(gui, modified) {\n  const opt = gui.__preset_select[gui.__preset_select.selectedIndex];\n\n  if (modified) {\n    opt.innerHTML = opt.value + '*';\n  } else {\n    opt.innerHTML = opt.value;\n  }\n}\n\nfunction augmentController(gui, li, controller) {\n  controller.__li = li;\n  controller.__gui = gui;\n\n  common.extend(controller, /** @lends Controller.prototype */ {\n    /**\n     * @param  {Array|Object} options\n     * @return {Controller}\n     */\n    options: function(options) {\n      if (arguments.length > 1) {\n        const nextSibling = controller.__li.nextElementSibling;\n        controller.remove();\n\n        return add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: nextSibling,\n            factoryArgs: [common.toArray(arguments)]\n          }\n        );\n      }\n\n      if (common.isArray(options) || common.isObject(options)) {\n        const nextSibling = controller.__li.nextElementSibling;\n        controller.remove();\n\n        return add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: nextSibling,\n            factoryArgs: [options]\n          }\n        );\n      }\n    },\n\n    /**\n     * Sets the name of the controller.\n     * @param  {string} name\n     * @return {Controller}\n     */\n    name: function(name) {\n      controller.__li.firstElementChild.firstElementChild.innerHTML = name;\n      return controller;\n    },\n\n    /**\n     * Sets controller to listen for changes on its underlying object.\n     * @return {Controller}\n     */\n    listen: function() {\n      controller.__gui.listen(controller);\n      return controller;\n    },\n\n    /**\n     * Removes the controller from its parent GUI.\n     * @return {Controller}\n     */\n    remove: function() {\n      controller.__gui.remove(controller);\n      return controller;\n    }\n  });\n\n  // All sliders should be accompanied by a box.\n  if (controller instanceof NumberControllerSlider) {\n    const box = new NumberControllerBox(controller.object, controller.property,\n      { min: controller.__min, max: controller.__max, step: controller.__step });\n\n    common.each(['updateDisplay', 'onChange', 'onFinishChange', 'step', 'min', 'max'], function(method) {\n      const pc = controller[method];\n      const pb = box[method];\n      controller[method] = box[method] = function() {\n        const args = Array.prototype.slice.call(arguments);\n        pb.apply(box, args);\n        return pc.apply(controller, args);\n      };\n    });\n\n    dom.addClass(li, 'has-slider');\n    controller.domElement.insertBefore(box.domElement, controller.domElement.firstElementChild);\n  } else if (controller instanceof NumberControllerBox) {\n    const r = function(returned) {\n      // Have we defined both boundaries?\n      if (common.isNumber(controller.__min) && common.isNumber(controller.__max)) {\n        // Well, then lets just replace this with a slider.\n\n        // lets remember if the old controller had a specific name or was listening\n        const oldName = controller.__li.firstElementChild.firstElementChild.innerHTML;\n        const wasListening = controller.__gui.__listening.indexOf(controller) > -1;\n\n        controller.remove();\n        const newController = add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: controller.__li.nextElementSibling,\n            factoryArgs: [controller.__min, controller.__max, controller.__step]\n          }\n        );\n\n        newController.name(oldName);\n        if (wasListening) newController.listen();\n\n        return newController;\n      }\n\n      return returned;\n    };\n\n    controller.min = common.compose(r, controller.min);\n    controller.max = common.compose(r, controller.max);\n  } else if (controller instanceof BooleanController) {\n    dom.bind(li, 'click', function() {\n      dom.fakeEvent(controller.__checkbox, 'click');\n    });\n\n    dom.bind(controller.__checkbox, 'click', function(e) {\n      e.stopPropagation(); // Prevents double-toggle\n    });\n  } else if (controller instanceof FunctionController) {\n    dom.bind(li, 'click', function() {\n      dom.fakeEvent(controller.__button, 'click');\n    });\n\n    dom.bind(li, 'mouseover', function() {\n      dom.addClass(controller.__button, 'hover');\n    });\n\n    dom.bind(li, 'mouseout', function() {\n      dom.removeClass(controller.__button, 'hover');\n    });\n  } else if (controller instanceof ColorController) {\n    dom.addClass(li, 'color');\n    controller.updateDisplay = common.compose(function(val) {\n      li.style.borderLeftColor = controller.__color.toString();\n      return val;\n    }, controller.updateDisplay);\n\n    controller.updateDisplay();\n  }\n\n  controller.setValue = common.compose(function(val) {\n    if (gui.getRoot().__preset_select && controller.isModified()) {\n      markPresetModified(gui.getRoot(), true);\n    }\n\n    return val;\n  }, controller.setValue);\n}\n\nfunction recallSavedValue(gui, controller) {\n  // Find the topmost GUI, that's where remembered objects live.\n  const root = gui.getRoot();\n\n  // Does the object we're controlling match anything we've been told to\n  // remember?\n  const matchedIndex = root.__rememberedObjects.indexOf(controller.object);\n\n  // Why yes, it does!\n  if (matchedIndex !== -1) {\n    // Let me fetch a map of controllers for thcommon.isObject.\n    let controllerMap = root.__rememberedObjectIndecesToControllers[matchedIndex];\n\n    // Ohp, I believe this is the first controller we've created for this\n    // object. Lets make the map fresh.\n    if (controllerMap === undefined) {\n      controllerMap = {};\n      root.__rememberedObjectIndecesToControllers[matchedIndex] =\n        controllerMap;\n    }\n\n    // Keep track of this controller\n    controllerMap[controller.property] = controller;\n\n    // Okay, now have we saved any values for this controller?\n    if (root.load && root.load.remembered) {\n      const presetMap = root.load.remembered;\n\n      // Which preset are we trying to load?\n      let preset;\n\n      if (presetMap[gui.preset]) {\n        preset = presetMap[gui.preset];\n      } else if (presetMap[DEFAULT_DEFAULT_PRESET_NAME]) {\n        // Uhh, you can have the default instead?\n        preset = presetMap[DEFAULT_DEFAULT_PRESET_NAME];\n      } else {\n        // Nada.\n        return;\n      }\n\n      // Did the loaded object remember thcommon.isObject? &&  Did we remember this particular property?\n      if (preset[matchedIndex] && preset[matchedIndex][controller.property] !== undefined) {\n        // We did remember something for this guy ...\n        const value = preset[matchedIndex][controller.property];\n\n        // And that's what it is.\n        controller.initialValue = value;\n        controller.setValue(value);\n      }\n    }\n  }\n}\n\nfunction add(gui, object, property, params) {\n  if (object[property] === undefined) {\n    throw new Error(`Object \"${object}\" has no property \"${property}\"`);\n  }\n\n  let controller;\n\n  if (params.color) {\n    controller = new ColorController(object, property);\n  } else {\n    const factoryArgs = [object, property].concat(params.factoryArgs);\n    controller = ControllerFactory.apply(gui, factoryArgs);\n  }\n\n  if (params.before instanceof Controller) {\n    params.before = params.before.__li;\n  }\n\n  recallSavedValue(gui, controller);\n\n  dom.addClass(controller.domElement, 'c');\n\n  const name = document.createElement('span');\n  dom.addClass(name, 'property-name');\n  name.innerHTML = controller.property;\n\n  const container = document.createElement('div');\n  container.appendChild(name);\n  container.appendChild(controller.domElement);\n\n  const li = addRow(gui, container, params.before);\n\n  dom.addClass(li, GUI.CLASS_CONTROLLER_ROW);\n  if (controller instanceof ColorController) {\n    dom.addClass(li, 'color');\n  } else {\n    dom.addClass(li, typeof controller.getValue());\n  }\n\n  augmentController(gui, li, controller);\n\n  gui.__controllers.push(controller);\n\n  return controller;\n}\n\nfunction getLocalStorageHash(gui, key) {\n  // TODO how does this deal with multiple GUI's?\n  return document.location.href + '.' + key;\n}\n\nfunction addPresetOption(gui, name, setSelected) {\n  const opt = document.createElement('option');\n  opt.innerHTML = name;\n  opt.value = name;\n  gui.__preset_select.appendChild(opt);\n  if (setSelected) {\n    gui.__preset_select.selectedIndex = gui.__preset_select.length - 1;\n  }\n}\n\nfunction showHideExplain(gui, explain) {\n  explain.style.display = gui.useLocalStorage ? 'block' : 'none';\n}\n\nfunction addSaveMenu(gui) {\n  const div = gui.__save_row = document.createElement('li');\n\n  dom.addClass(gui.domElement, 'has-save');\n\n  gui.__ul.insertBefore(div, gui.__ul.firstChild);\n\n  dom.addClass(div, 'save-row');\n\n  const gears = document.createElement('span');\n  gears.innerHTML = '&nbsp;';\n  dom.addClass(gears, 'button gears');\n\n  // TODO replace with FunctionController\n  const button = document.createElement('span');\n  button.innerHTML = 'Save';\n  dom.addClass(button, 'button');\n  dom.addClass(button, 'save');\n\n  const button2 = document.createElement('span');\n  button2.innerHTML = 'New';\n  dom.addClass(button2, 'button');\n  dom.addClass(button2, 'save-as');\n\n  const button3 = document.createElement('span');\n  button3.innerHTML = 'Revert';\n  dom.addClass(button3, 'button');\n  dom.addClass(button3, 'revert');\n\n  const select = gui.__preset_select = document.createElement('select');\n\n  if (gui.load && gui.load.remembered) {\n    common.each(gui.load.remembered, function(value, key) {\n      addPresetOption(gui, key, key === gui.preset);\n    });\n  } else {\n    addPresetOption(gui, DEFAULT_DEFAULT_PRESET_NAME, false);\n  }\n\n  dom.bind(select, 'change', function() {\n    for (let index = 0; index < gui.__preset_select.length; index++) {\n      gui.__preset_select[index].innerHTML = gui.__preset_select[index].value;\n    }\n\n    gui.preset = this.value;\n  });\n\n  div.appendChild(select);\n  div.appendChild(gears);\n  div.appendChild(button);\n  div.appendChild(button2);\n  div.appendChild(button3);\n\n  if (SUPPORTS_LOCAL_STORAGE) {\n    const explain = document.getElementById('dg-local-explain');\n    const localStorageCheckBox = document.getElementById('dg-local-storage');\n    const saveLocally = document.getElementById('dg-save-locally');\n\n    saveLocally.style.display = 'block';\n\n    if (localStorage.getItem(getLocalStorageHash(gui, 'isLocal')) === 'true') {\n      localStorageCheckBox.setAttribute('checked', 'checked');\n    }\n\n    showHideExplain(gui, explain);\n\n    // TODO: Use a boolean controller, fool!\n    dom.bind(localStorageCheckBox, 'change', function() {\n      gui.useLocalStorage = !gui.useLocalStorage;\n      showHideExplain(gui, explain);\n    });\n  }\n\n  const newConstructorTextArea = document.getElementById('dg-new-constructor');\n\n  dom.bind(newConstructorTextArea, 'keydown', function(e) {\n    if (e.metaKey && (e.which === 67 || e.keyCode === 67)) {\n      SAVE_DIALOGUE.hide();\n    }\n  });\n\n  dom.bind(gears, 'click', function() {\n    newConstructorTextArea.innerHTML = JSON.stringify(gui.getSaveObject(), undefined, 2);\n    SAVE_DIALOGUE.show();\n    newConstructorTextArea.focus();\n    newConstructorTextArea.select();\n  });\n\n  dom.bind(button, 'click', function() {\n    gui.save();\n  });\n\n  dom.bind(button2, 'click', function() {\n    const presetName = prompt('Enter a new preset name.');\n    if (presetName) {\n      gui.saveAs(presetName);\n    }\n  });\n\n  dom.bind(button3, 'click', function() {\n    gui.revert();\n  });\n\n  // div.appendChild(button2);\n}\n\nfunction addResizeHandle(gui) {\n  let pmouseX;\n\n  gui.__resize_handle = document.createElement('div');\n\n  common.extend(gui.__resize_handle.style, {\n\n    width: '6px',\n    marginLeft: '-3px',\n    height: '200px',\n    cursor: 'ew-resize',\n    position: 'absolute'\n    // border: '1px solid blue'\n\n  });\n\n  function drag(e) {\n    e.preventDefault();\n\n    gui.width += pmouseX - e.clientX;\n    gui.onResize();\n    pmouseX = e.clientX;\n\n    return false;\n  }\n\n  function dragStop() {\n    dom.removeClass(gui.__closeButton, GUI.CLASS_DRAG);\n    dom.unbind(window, 'mousemove', drag);\n    dom.unbind(window, 'mouseup', dragStop);\n  }\n\n  function dragStart(e) {\n    e.preventDefault();\n\n    pmouseX = e.clientX;\n\n    dom.addClass(gui.__closeButton, GUI.CLASS_DRAG);\n    dom.bind(window, 'mousemove', drag);\n    dom.bind(window, 'mouseup', dragStop);\n\n    return false;\n  }\n\n  dom.bind(gui.__resize_handle, 'mousedown', dragStart);\n  dom.bind(gui.__closeButton, 'mousedown', dragStart);\n\n  gui.domElement.insertBefore(gui.__resize_handle, gui.domElement.firstElementChild);\n}\n\nfunction setWidth(gui, w) {\n  gui.domElement.style.width = w + 'px';\n  // Auto placed save-rows are position fixed, so we have to\n  // set the width manually if we want it to bleed to the edge\n  if (gui.__save_row && gui.autoPlace) {\n    gui.__save_row.style.width = w + 'px';\n  }\n  if (gui.__closeButton) {\n    gui.__closeButton.style.width = w + 'px';\n  }\n}\n\nfunction getCurrentPreset(gui, useInitialValues) {\n  const toReturn = {};\n\n  // For each object I'm remembering\n  common.each(gui.__rememberedObjects, function(val, index) {\n    const savedValues = {};\n\n    // The controllers I've made for thcommon.isObject by property\n    const controllerMap =\n      gui.__rememberedObjectIndecesToControllers[index];\n\n    // Remember each value for each property\n    common.each(controllerMap, function(controller, property) {\n      savedValues[property] = useInitialValues ? controller.initialValue : controller.getValue();\n    });\n\n    // Save the values for thcommon.isObject\n    toReturn[index] = savedValues;\n  });\n\n  return toReturn;\n}\n\nfunction setPresetSelectIndex(gui) {\n  for (let index = 0; index < gui.__preset_select.length; index++) {\n    if (gui.__preset_select[index].value === gui.preset) {\n      gui.__preset_select.selectedIndex = index;\n    }\n  }\n}\n\nfunction updateDisplays(controllerArray) {\n  if (controllerArray.length !== 0) {\n    requestAnimationFrame.call(window, function() {\n      updateDisplays(controllerArray);\n    });\n  }\n\n  common.each(controllerArray, function(c) {\n    c.updateDisplay();\n  });\n}\n\nexport default GUI;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Color from './color/Color';\nimport math from './color/math';\nimport interpret from './color/interpret';\n\nimport Controller from './controllers/Controller';\nimport BooleanController from './controllers/BooleanController';\nimport OptionController from './controllers/OptionController';\nimport StringController from './controllers/StringController';\nimport NumberController from './controllers/NumberController';\nimport NumberControllerBox from './controllers/NumberControllerBox';\nimport NumberControllerSlider from './controllers/NumberControllerSlider';\nimport FunctionController from './controllers/FunctionController';\nimport ColorController from './controllers/ColorController';\n\nimport domImport from './dom/dom';\nimport GUIImport from './gui/GUI';\n\nexport const color = {\n  Color: Color,\n  math: math,\n  interpret: interpret\n};\n\nexport const controllers = {\n  Controller: Controller,\n  BooleanController: BooleanController,\n  OptionController: OptionController,\n  StringController: StringController,\n  NumberController: NumberController,\n  NumberControllerBox: NumberControllerBox,\n  NumberControllerSlider: NumberControllerSlider,\n  FunctionController: FunctionController,\n  ColorController: ColorController\n};\n\nexport const dom = { dom: domImport };\n\nexport const gui = { GUI: GUIImport };\n\nexport const GUI = GUIImport;\n\nexport default {\n  color,\n  controllers,\n  dom,\n  gui,\n  GUI\n};\n","import * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\n\r\nimport * as dat from 'dat.gui';\r\n\r\nconst gui = new dat.GUI();\r\nconst settings = {\r\n    boidMinSpeed: 0,\r\n    boidMaxSpeed: 0.85,\r\n    boidMinForce: 0,\r\n    boidMaxForce: 0.05,\r\n}\r\n\r\n// Adding GUI controls for min and max speed\r\ngui.add(settings, 'boidMinSpeed', 0, 5).name('Min Speed').onChange(updateSpeedRange);\r\ngui.add(settings, 'boidMaxSpeed', 0, 5).name('Max Speed').onChange(updateSpeedRange);\r\ngui.add(settings, 'boidMinForce', 0, 0.25).name('Min Force').onChange(updateForceRange);\r\ngui.add(settings, 'boidMaxForce', 0, 0.25).name('Max Force').onChange(updateForceRange);\r\n\r\nfunction main() {\r\n    // Scene setup\r\n    const scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0x000000);\r\n    const canvas = document.querySelector('#simulation-container');\r\n    const renderer = setupRenderer(canvas);\r\n    const camera = setupCamera();\r\n    const controls = setupControls(camera, renderer.domElement);\r\n\r\n    // Lighting and Sky\r\n    setupLighting(scene);\r\n\r\n    // World bounds\r\n    const worldBounds = 200;\r\n    createWorldBounds(scene, worldBounds);\r\n\r\n    // Boids\r\n    const boids = setupBoids(scene, worldBounds);\r\n\r\n    // Render loop\r\n    requestAnimationFrame(function render(time) {\r\n        updateScene(scene, time, controls, renderer, camera, boids, worldBounds);\r\n        renderer.render(scene, camera);\r\n        requestAnimationFrame(render);\r\n    }); \r\n}\r\n\r\nfunction getRandomColor() {\r\n    const brightColors = [\r\n        0xff0000, // Red\r\n        0x00ff00, // Green\r\n        0x0000ff, // Blue\r\n        0xffff00, // Yellow\r\n        0x00ffff, // Cyan\r\n        0xff00ff, // Magenta\r\n    ];\r\n    const color = brightColors[Math.floor(Math.random() * brightColors.length)];\r\n    return color;\r\n}\r\n// Ensure min speed is always less than or equal to max speed\r\nfunction updateSpeedRange() {\r\n    if (settings.boidMinSpeed > settings.boidMaxSpeed) {\r\n        settings.boidMinSpeed = settings.boidMaxSpeed;\r\n    }\r\n}\r\n\r\n// Ensure min force is always less than or equal to max speed\r\nfunction updateForceRange() {\r\n    if (settings.boidMinForce > settings.boidMaxForce) {\r\n        settings.boidMinForce = settings.boidMaxForce;\r\n    }\r\n}\r\n\r\nfunction makeBoidInstance(scene, color, boidGeometry, maxSpeed, minSpeed, spawnRadius) {\r\n    const material = new THREE.MeshToonMaterial({\r\n        color: color,\r\n        emissive: color,\r\n        emissiveIntensity: 0.6\r\n    });\r\n\r\n    const boid = new THREE.Mesh(boidGeometry, material);\r\n\r\n    boid.userData.velocity = new THREE.Vector3().randomDirection().multiplyScalar(Math.random() * (maxSpeed - minSpeed) + minSpeed);\r\n    \r\n    scene.add(boid);\r\n\r\n    let spawnPoint = new THREE.Vector3().randomDirection();\r\n    spawnPoint.normalize();\r\n    spawnPoint.multiplyScalar(Math.random() * spawnRadius);\r\n    \r\n    boid.position.set(spawnPoint.x, spawnPoint.y, spawnPoint.z);\r\n\r\n    return boid;\r\n}\r\n\r\nfunction setupRenderer(canvas) {\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true, canvas });\r\n    renderer.toneMapping = THREE.ACESFilmicToneMapping;\r\n    renderer.toneMappingExposure = 0.75;\r\n    return renderer;\r\n}\r\n\r\nfunction setupCamera() {\r\n    const fov = 75;\r\n    const aspect = 2;\r\n    const near = 0.1;\r\n    const far = 5000;\r\n    const camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\r\n    camera.position.set(133.33, 114.29, 133.33);\r\n    return camera;\r\n}\r\n\r\nfunction setupControls(camera, domElement) {\r\n    const controls = new OrbitControls(camera, domElement);\r\n    controls.autoRotate = true;\r\n    controls.autoRotateSpeed = 0.5;\r\n    controls.enablePan = false;\r\n    return controls;\r\n}\r\n\r\nfunction setupLighting(scene) {\r\n    const ambientLight = new THREE.AmbientLight(0x606060);\r\n    scene.add(ambientLight);\r\n\r\n    const mainLight = new THREE.DirectionalLight(0xFFFFFF, 1.5);\r\n    mainLight.position.set(-1, 2, 4);\r\n    scene.add(mainLight);\r\n}\r\n\r\nfunction createWorldBounds(scene, worldBounds) {\r\n    const size = worldBounds;\r\n    const geometry = new THREE.BoxGeometry(size, size, size, 2, 2, 2);\r\n    const edgeGeometry = new THREE.EdgesGeometry(geometry);\r\n    const material = new THREE.LineBasicMaterial({ color: 0xFFFFFF });\r\n    const mesh = new THREE.LineSegments(edgeGeometry, material);\r\n    scene.add(mesh);\r\n}\r\n\r\nfunction setupBoids(scene, worldBounds) {\r\n    // Boid parameters\r\n    const boidRadius = 1.0;\r\n    const boidHeight = 3.3;\r\n    const radialSegments = 9;\r\n    const boidGeometry = new THREE.ConeGeometry(boidRadius, boidHeight, radialSegments).rotateX(Math.PI / 2);\r\n\r\n    // Common parameters for boids\r\n    const spawnRadius = worldBounds / 2;\r\n    const numberOfBoids = 500;\r\n\r\n    // Create boids\r\n    let boids = [];\r\n    for (let i = 0; i < numberOfBoids; i++) {\r\n        boids.push(makeBoidInstance(scene, getRandomColor(), boidGeometry, settings.boidMaxSpeed, settings.boidMinSpeed, spawnRadius));\r\n    }\r\n\r\n    return boids;\r\n}\r\n\r\nfunction align(boid, boids, perceptionRadius) {\r\n    let steering = new THREE.Vector3();\r\n    let total = 0;\r\n    for (let other of boids) {\r\n        let distance = boid.position.distanceTo(other.position);\r\n        if (other !== boid && distance < perceptionRadius) {\r\n            steering.add(other.userData.velocity);\r\n            total++;\r\n        }\r\n    }\r\n    if (total > 0) {\r\n        steering.divideScalar(total);\r\n        steering.normalize();\r\n        steering.multiplyScalar(settings.boidMaxSpeed);\r\n        steering.sub(boid.userData.velocity);\r\n        steering.clampLength(0, settings.boidMaxForce);\r\n    }\r\n    return steering;\r\n}\r\n\r\nfunction cohesion(boid, boids, perceptionRadius) {\r\n    let steering = new THREE.Vector3();\r\n    let total = 0;\r\n    for (let other of boids) {\r\n        let distance = boid.position.distanceTo(other.position);\r\n        if (other !== boid && distance < perceptionRadius) {\r\n            steering.add(other.position);\r\n            total++;\r\n        }\r\n    }\r\n    if (total > 0) {\r\n        steering.divideScalar(total);\r\n        steering.sub(boid.position);\r\n        steering.normalize();\r\n        steering.multiplyScalar(settings.boidMaxSpeed);\r\n        steering.sub(boid.userData.velocity);\r\n        steering.clampLength(0, settings.boidMaxForce);\r\n    }\r\n    return steering;\r\n}\r\n\r\nfunction separation(boid, boids, perceptionRadius) {\r\n    let steering = new THREE.Vector3();\r\n    let total = 0;\r\n    for (let other of boids) {\r\n        let distance = boid.position.distanceTo(other.position);\r\n        if (other !== boid && distance < perceptionRadius) {\r\n            let diff = boid.position.clone().sub(other.position);\r\n            diff.divideScalar(distance);\r\n            steering.add(diff);\r\n            total++;\r\n        }\r\n    }\r\n    if (total > 0) {\r\n        steering.divideScalar(total);\r\n        steering.normalize();\r\n        steering.multiplyScalar(settings.boidMaxSpeed);\r\n        steering.sub(boid.userData.velocity);\r\n        steering.clampLength(0, settings.boidMaxForce);\r\n    }\r\n    return steering;\r\n}\r\n\r\nfunction updateScene(scene, time, controls, renderer, camera, boids, worldBounds) {\r\n    time *= 0.001;\r\n    controls.update();\r\n\r\n    if (resizeRendererToDisplaySize(renderer)) {\r\n        const canvas = renderer.domElement;\r\n        camera.aspect = canvas.clientWidth / canvas.clientHeight;\r\n        camera.updateProjectionMatrix();\r\n    }\r\n\r\n    // Update boids - Implement the logic for boid movement\r\n    boids.forEach((boid) => {\r\n        let alignment = align(boid, boids, 50); // Adjust the perception radius as needed\r\n        let cohesionForce = cohesion(boid, boids, 50);\r\n        let separationForce = separation(boid, boids, 50);\r\n\r\n        boid.userData.velocity.add(alignment);\r\n        boid.userData.velocity.add(cohesionForce);\r\n        boid.userData.velocity.add(separationForce);\r\n\r\n        boid.position.add(boid.userData.velocity);\r\n\r\n        wrapAround(boid, worldBounds / 2, boid.position);\r\n\r\n        boid.lookAt(boid.position.clone().add(boid.userData.velocity));\r\n    });\r\n\r\n    renderer.render(scene, camera);\r\n}\r\n\r\nfunction wrapAround(boid, boundary) {\r\n    let wrapped = false;\r\n\r\n    if (boid.position.x > boundary) {\r\n        boid.position.x = -boundary;\r\n        wrapped = true;\r\n    } else if (boid.position.x < -boundary) {\r\n        boid.position.x = boundary;\r\n        wrapped = true;\r\n    }\r\n\r\n    if (boid.position.y > boundary) {\r\n        boid.position.y = -boundary;\r\n        wrapped = true;\r\n    } else if (boid.position.y < -boundary) {\r\n        boid.position.y = boundary;\r\n        wrapped = true;\r\n    }\r\n\r\n    if (boid.position.z > boundary) {\r\n        boid.position.z = -boundary;\r\n        wrapped = true;\r\n    } else if (boid.position.z < -boundary) {\r\n        boid.position.z = boundary;\r\n        wrapped = true;\r\n    }\r\n}\r\n\r\nfunction resizeRendererToDisplaySize(renderer) {\r\n    const canvas = renderer.domElement;\r\n    const pixelRatio = window.devicePixelRatio;\r\n    const width = canvas.clientWidth * pixelRatio | 0;\r\n    const height = canvas.clientHeight * pixelRatio | 0;\r\n    const needResize = canvas.width !== width || canvas.height !== height;\r\n    if (needResize) {\r\n        renderer.setSize(width, height, false);\r\n    }\r\n    return needResize;\r\n}\r\n\r\nmain();","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}